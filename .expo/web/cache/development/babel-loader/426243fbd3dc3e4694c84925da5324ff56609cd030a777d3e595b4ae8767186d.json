{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\nimport { getNewAccessToken } from \"../../utils/token\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar TypeExamScreen = function TypeExamScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestionIndex = _useState4[0],\n    setCurrentQuestionIndex = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    answers = _useState6[0],\n    setAnswers = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isSubmitting = _useState8[0],\n    setIsSubmitting = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isLoading = _useState10[0],\n    setIsLoading = _useState10[1];\n  useEffect(function () {\n    fetchQuestions();\n  }, []);\n  var fetchQuestions = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var accessToken = yield getNewAccessToken(navigation);\n        if (!accessToken) {\n          console.error(\"액세스 토큰이 없습니다.\");\n          Alert.alert(\"오류 발생\", \"로그인이 필요합니다.\", [{\n            text: \"확인\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            }\n          }]);\n          return;\n        }\n        console.log(\"질문을 불러오는 중...\");\n        var response = yield fetch(API_BASE_URL + \"/mbti/questions/\", {\n          headers: {\n            Authorization: \"Bearer \" + accessToken,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"\\uC11C\\uBC84 \\uC751\\uB2F5\\uC774 \\uC815\\uC0C1\\uC801\\uC774\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4: \" + response.status);\n        }\n        var data = yield response.json();\n        console.log(data.length + \"\\uAC1C\\uC758 \\uC9C8\\uBB38\\uC744 \\uBD88\\uB7EC\\uC654\\uC2B5\\uB2C8\\uB2E4.\");\n        setQuestions(data);\n        setAnswers(Array(data.length).fill(null));\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n        Alert.alert(\"오류 발생\", \"질문을 불러오는 중 오류가 발생했습니다.\", [{\n          text: \"확인\",\n          onPress: function onPress() {\n            return navigation.goBack();\n          }\n        }]);\n      }\n    });\n    return function fetchQuestions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSelectOption = function handleSelectOption(option) {\n    var newAnswers = _toConsumableArray(answers);\n    newAnswers[currentQuestionIndex] = option;\n    setAnswers(newAnswers);\n    if (currentQuestionIndex === questions.length - 1) {\n      submitAnswers(newAnswers);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  var submitAnswers = function () {\n    var _ref3 = _asyncToGenerator(function* (finalAnswers) {\n      setIsSubmitting(true);\n      try {\n        var accessToken = yield getNewAccessToken(navigation);\n        if (!accessToken) {\n          console.error(\"액세스 토큰이 없습니다.\");\n          Alert.alert(\"오류 발생\", \"로그인이 필요합니다.\", [{\n            text: \"확인\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            }\n          }]);\n          return;\n        }\n        var response = yield fetch(API_BASE_URL + \"/mbti/result/\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + accessToken,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            answers: finalAnswers\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"\\uC11C\\uBC84 \\uC751\\uB2F5\\uC774 \\uC815\\uC0C1\\uC801\\uC774\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4: \" + response.status);\n        }\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'MainTab'\n          }, {\n            name: 'TypeResult'\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error submitting answers:\", error);\n        Alert.alert(\"오류 발생\", \"답변 제출 중 오류가 발생했습니다. 다시 시도해주세요.\", [{\n          text: \"확인\",\n          onPress: function onPress() {\n            return setIsSubmitting(false);\n          }\n        }]);\n      }\n    });\n    return function submitAnswers(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (isLoading || questions.length === 0) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6EE69E\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"\\uC9C8\\uBB38\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      })]\n    });\n  }\n  var currentQuestion = questions[currentQuestionIndex];\n  var progressText = currentQuestionIndex + 1 + \" / \" + questions.length;\n  return _jsx(View, {\n    style: styles.container,\n    children: isSubmitting ? _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6EE69E\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"\\uACB0\\uACFC\\uB97C \\uBD84\\uC11D \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: styles.progressContainer,\n        children: [_jsx(Text, {\n          style: styles.progressText,\n          children: progressText\n        }), _jsx(View, {\n          style: styles.progressBar,\n          children: _jsx(View, {\n            style: [styles.progressFill, {\n              width: (currentQuestionIndex + 1) / questions.length * 100 + \"%\"\n            }]\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.questionContainer,\n        children: _jsx(Text, {\n          style: styles.questionText,\n          children: currentQuestion.question_text\n        })\n      }), _jsxs(View, {\n        style: styles.optionsContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.optionButton,\n          onPress: function onPress() {\n            return handleSelectOption(\"A\");\n          },\n          children: _jsxs(Text, {\n            style: styles.optionText,\n            children: [\"A. \", currentQuestion.option_a]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.optionButton,\n          onPress: function onPress() {\n            return handleSelectOption(\"B\");\n          },\n          children: _jsxs(Text, {\n            style: styles.optionText,\n            children: [\"B. \", currentQuestion.option_b]\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n    padding: 20\n  },\n  progressContainer: {\n    marginTop: 60,\n    marginBottom: 20\n  },\n  progressText: {\n    color: \"#FFFFFF\",\n    fontSize: 16,\n    marginBottom: 5,\n    textAlign: \"right\"\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: \"#D4DDEF20\",\n    borderRadius: 4,\n    overflow: \"hidden\"\n  },\n  progressFill: {\n    height: \"100%\",\n    backgroundColor: \"#6EE69E\",\n    borderRadius: 4\n  },\n  questionContainer: {\n    marginVertical: 40,\n    alignItems: \"center\"\n  },\n  questionText: {\n    color: \"#FFFFFF\",\n    fontSize: 22,\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  optionsContainer: {\n    marginTop: 20\n  },\n  optionButton: {\n    backgroundColor: \"#D4DDEF60\",\n    padding: 20,\n    borderRadius: 15,\n    marginVertical: 10\n  },\n  optionText: {\n    color: \"#FFFFFF\",\n    fontSize: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loadingText: {\n    color: \"#FFFFFF\",\n    fontSize: 18,\n    marginTop: 20\n  }\n});\nexport default TypeExamScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","Alert","ActivityIndicator","API_BASE_URL","getNewAccessToken","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TypeExamScreen","_ref","navigation","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestionIndex","setCurrentQuestionIndex","_useState5","_useState6","answers","setAnswers","_useState7","_useState8","isSubmitting","setIsSubmitting","_useState9","_useState10","isLoading","setIsLoading","fetchQuestions","_ref2","_asyncToGenerator","accessToken","console","error","alert","text","onPress","navigate","log","response","fetch","headers","Authorization","ok","Error","status","data","json","length","Array","fill","goBack","apply","arguments","handleSelectOption","option","newAnswers","_toConsumableArray","submitAnswers","_ref3","finalAnswers","method","body","JSON","stringify","reset","index","routes","name","_x","style","styles","loadingContainer","children","size","color","loadingText","currentQuestion","progressText","container","progressContainer","progressBar","progressFill","width","questionContainer","questionText","question_text","optionsContainer","optionButton","optionText","option_a","option_b","create","flex","backgroundColor","padding","marginTop","marginBottom","fontSize","textAlign","height","borderRadius","overflow","marginVertical","alignItems","fontWeight","justifyContent"],"sources":["/Users/seungyeon/Doodook_Frontend/src/screens/Guide/TypeExamScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n  ActivityIndicator,\n} from \"react-native\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\nimport { getNewAccessToken } from \"../../utils/token\";\n\n// 질문 데이터는 API에서 불러올 예정\n\nconst TypeExamScreen = ({ navigation }) => {\n  // 질문 데이터와 현재 상태를 저장하는 상태 변수들\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 컴포넌트 마운트 시 질문 데이터 불러오기\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  // 질문 데이터 불러오는 함수\n  const fetchQuestions = async () => {\n    try {\n      // 인증 토큰 가져오기\n      const accessToken = await getNewAccessToken(navigation);\n      if (!accessToken) {\n        console.error(\"액세스 토큰이 없습니다.\");\n        Alert.alert(\"오류 발생\", \"로그인이 필요합니다.\", [\n          { text: \"확인\", onPress: () => navigation.navigate(\"Login\") },\n        ]);\n        return;\n      }\n\n      console.log(\"질문을 불러오는 중...\");\n      const response = await fetch(`${API_BASE_URL}/mbti/questions/`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`서버 응답이 정상적이지 않습니다: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(`${data.length}개의 질문을 불러왔습니다.`);\n      setQuestions(data);\n      setAnswers(Array(data.length).fill(null));\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      Alert.alert(\"오류 발생\", \"질문을 불러오는 중 오류가 발생했습니다.\", [\n        { text: \"확인\", onPress: () => navigation.goBack() },\n      ]);\n    }\n  };\n\n  // 답변 선택 핸들러\n  const handleSelectOption = (option) => {\n    // 현재 답변 배열 복사본 생성\n    const newAnswers = [...answers];\n    // 현재 질문에 대한 답변 저장\n    newAnswers[currentQuestionIndex] = option;\n    setAnswers(newAnswers);\n\n    // 마지막 질문인지 확인\n    if (currentQuestionIndex === questions.length - 1) {\n      // 마지막 질문이면 결과 제출\n      submitAnswers(newAnswers);\n    } else {\n      // 다음 질문으로 이동\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  // 답변 제출 함수\n  const submitAnswers = async (finalAnswers) => {\n    setIsSubmitting(true);\n\n    try {\n      // 인증 토큰 가져오기\n      const accessToken = await getNewAccessToken(navigation);\n      if (!accessToken) {\n        console.error(\"액세스 토큰이 없습니다.\");\n        Alert.alert(\"오류 발생\", \"로그인이 필요합니다.\", [\n          { text: \"확인\", onPress: () => navigation.navigate(\"Login\") },\n        ]);\n        return;\n      }\n\n      // API 엔드포인트에 답변 제출\n      const response = await fetch(`${API_BASE_URL}/mbti/result/`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          answers: finalAnswers,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`서버 응답이 정상적이지 않습니다: ${response.status}`);\n      }\n\n      // 성공적으로 제출되면 결과 화면으로 이동\n      navigation.reset({\n        index: 0,\n        routes: [\n          { name: 'MainTab' },\n          { name: 'TypeResult' }\n        ],\n      });\n    } catch (error) {\n      console.error(\"Error submitting answers:\", error);\n      Alert.alert(\n        \"오류 발생\",\n        \"답변 제출 중 오류가 발생했습니다. 다시 시도해주세요.\",\n        [{ text: \"확인\", onPress: () => setIsSubmitting(false) }]\n      );\n    }\n  };\n\n  // 로딩 중이거나 질문이 없을 경우\n  if (isLoading || questions.length === 0) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#6EE69E\" />\n        <Text style={styles.loadingText}>질문을 불러오는 중...</Text>\n      </View>\n    );\n  }\n\n  // 현재 질문 객체\n  const currentQuestion = questions[currentQuestionIndex];\n\n  // 진행 상황 계산 (예: \"3 / 12\")\n  const progressText = `${currentQuestionIndex + 1} / ${questions.length}`;\n\n  return (\n    <View style={styles.container}>\n      {isSubmitting ? (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#6EE69E\" />\n          <Text style={styles.loadingText}>결과를 분석 중입니다...</Text>\n        </View>\n      ) : (\n        <>\n          <View style={styles.progressContainer}>\n            <Text style={styles.progressText}>{progressText}</Text>\n            <View style={styles.progressBar}>\n              <View\n                style={[\n                  styles.progressFill,\n                  {\n                    width: `${\n                      ((currentQuestionIndex + 1) / questions.length) * 100\n                    }%`,\n                  },\n                ]}\n              />\n            </View>\n          </View>\n\n          <View style={styles.questionContainer}>\n            <Text style={styles.questionText}>\n              {currentQuestion.question_text}\n            </Text>\n          </View>\n\n          <View style={styles.optionsContainer}>\n            <TouchableOpacity\n              style={styles.optionButton}\n              onPress={() => handleSelectOption(\"A\")}\n            >\n              <Text style={styles.optionText}>\n                A. {currentQuestion.option_a}\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.optionButton}\n              onPress={() => handleSelectOption(\"B\")}\n            >\n              <Text style={styles.optionText}>\n                B. {currentQuestion.option_b}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n    padding: 20,\n  },\n  progressContainer: {\n    marginTop: 60,\n    marginBottom: 20,\n  },\n  progressText: {\n    color: \"#FFFFFF\",\n    fontSize: 16,\n    marginBottom: 5,\n    textAlign: \"right\",\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: \"#D4DDEF20\",\n    borderRadius: 4,\n    overflow: \"hidden\",\n  },\n  progressFill: {\n    height: \"100%\",\n    backgroundColor: \"#6EE69E\",\n    borderRadius: 4,\n  },\n  questionContainer: {\n    marginVertical: 40,\n    alignItems: \"center\",\n  },\n  questionText: {\n    color: \"#FFFFFF\",\n    fontSize: 22,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n  },\n  optionsContainer: {\n    marginTop: 20,\n  },\n  optionButton: {\n    backgroundColor: \"#D4DDEF60\",\n    padding: 20,\n    borderRadius: 15,\n    marginVertical: 10,\n  },\n  optionText: {\n    color: \"#FFFFFF\",\n    fontSize: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  loadingText: {\n    color: \"#FFFFFF\",\n    fontSize: 18,\n    marginTop: 20,\n  },\n});\n\nexport default TypeExamScreen;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AASnD,SAASC,YAAY;AACrB,SAASC,iBAAiB;AAA4B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAItD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAElC,IAAAC,SAAA,GAAkCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAwDxB,QAAQ,CAAC,CAAC,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5DE,oBAAoB,GAAAD,UAAA;IAAEE,uBAAuB,GAAAF,UAAA;EACpD,IAAAG,UAAA,GAA8B5B,QAAQ,CAAC,EAAE,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAwChC,QAAQ,CAAC,KAAK,CAAC;IAAAiC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAkCpC,QAAQ,CAAC,IAAI,CAAC;IAAAqC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAzCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAG9BpC,SAAS,CAAC,YAAM;IACduC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMA,cAAc;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACjC,IAAI;QAEF,IAAMC,WAAW,SAASlC,iBAAiB,CAACS,UAAU,CAAC;QACvD,IAAI,CAACyB,WAAW,EAAE;UAChBC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC;UAC9BvC,KAAK,CAACwC,KAAK,CAAC,OAAO,EAAE,aAAa,EAAE,CAClC;YAAEC,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ9B,UAAU,CAAC+B,QAAQ,CAAC,OAAO,CAAC;YAAA;UAAC,CAAC,CAC5D,CAAC;UACF;QACF;QAEAL,OAAO,CAACM,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAMC,QAAQ,SAASC,KAAK,CAAI5C,YAAY,uBAAoB;UAC9D6C,OAAO,EAAE;YACPC,aAAa,cAAYX,WAAa;YACtC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACQ,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,+FAAuBL,QAAQ,CAACM,MAAQ,CAAC;QAC1D;QAEA,IAAMC,IAAI,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCf,OAAO,CAACM,GAAG,CAAIQ,IAAI,CAACE,MAAM,0EAAgB,CAAC;QAC3CrC,YAAY,CAACmC,IAAI,CAAC;QAClB3B,UAAU,CAAC8B,KAAK,CAACH,IAAI,CAACE,MAAM,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC;QACzCvB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDvC,KAAK,CAACwC,KAAK,CAAC,OAAO,EAAE,wBAAwB,EAAE,CAC7C;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQ9B,UAAU,CAAC6C,MAAM,CAAC,CAAC;UAAA;QAAC,CAAC,CACnD,CAAC;MACJ;IACF,CAAC;IAAA,gBAnCKvB,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAuB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmCnB;EAGD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,MAAM,EAAK;IAErC,IAAMC,UAAU,GAAAC,kBAAA,CAAOvC,OAAO,CAAC;IAE/BsC,UAAU,CAAC1C,oBAAoB,CAAC,GAAGyC,MAAM;IACzCpC,UAAU,CAACqC,UAAU,CAAC;IAGtB,IAAI1C,oBAAoB,KAAKJ,SAAS,CAACsC,MAAM,GAAG,CAAC,EAAE;MAEjDU,aAAa,CAACF,UAAU,CAAC;IAC3B,CAAC,MAAM;MAELzC,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD;EACF,CAAC;EAGD,IAAM4C,aAAa;IAAA,IAAAC,KAAA,GAAA7B,iBAAA,CAAG,WAAO8B,YAAY,EAAK;MAC5CrC,eAAe,CAAC,IAAI,CAAC;MAErB,IAAI;QAEF,IAAMQ,WAAW,SAASlC,iBAAiB,CAACS,UAAU,CAAC;QACvD,IAAI,CAACyB,WAAW,EAAE;UAChBC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC;UAC9BvC,KAAK,CAACwC,KAAK,CAAC,OAAO,EAAE,aAAa,EAAE,CAClC;YAAEC,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ9B,UAAU,CAAC+B,QAAQ,CAAC,OAAO,CAAC;YAAA;UAAC,CAAC,CAC5D,CAAC;UACF;QACF;QAGA,IAAME,QAAQ,SAASC,KAAK,CAAI5C,YAAY,oBAAiB;UAC3DiE,MAAM,EAAE,MAAM;UACdpB,OAAO,EAAE;YACPC,aAAa,cAAYX,WAAa;YACtC,cAAc,EAAE;UAClB,CAAC;UACD+B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB9C,OAAO,EAAE0C;UACX,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACrB,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,+FAAuBL,QAAQ,CAACM,MAAQ,CAAC;QAC1D;QAGAvC,UAAU,CAAC2D,KAAK,CAAC;UACfC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CACN;YAAEC,IAAI,EAAE;UAAU,CAAC,EACnB;YAAEA,IAAI,EAAE;UAAa,CAAC;QAE1B,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOnC,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDvC,KAAK,CAACwC,KAAK,CACT,OAAO,EACP,gCAAgC,EAChC,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQb,eAAe,CAAC,KAAK,CAAC;UAAA;QAAC,CAAC,CACxD,CAAC;MACH;IACF,CAAC;IAAA,gBA9CKmC,aAAaA,CAAAW,EAAA;MAAA,OAAAV,KAAA,CAAAP,KAAA,OAAAC,SAAA;IAAA;EAAA,GA8ClB;EAGD,IAAI3B,SAAS,IAAIhB,SAAS,CAACsC,MAAM,KAAK,CAAC,EAAE;IACvC,OACE/C,KAAA,CAACX,IAAI;MAACgF,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,GACnC1E,IAAA,CAACJ,iBAAiB;QAAC+E,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,EAClD5E,IAAA,CAACR,IAAI;QAAC+E,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAH,QAAA,EAAC;MAAa,CAAM,CAAC;IAAA,CACjD,CAAC;EAEX;EAGA,IAAMI,eAAe,GAAGnE,SAAS,CAACI,oBAAoB,CAAC;EAGvD,IAAMgE,YAAY,GAAMhE,oBAAoB,GAAG,CAAC,WAAMJ,SAAS,CAACsC,MAAQ;EAExE,OACEjD,IAAA,CAACT,IAAI;IAACgF,KAAK,EAAEC,MAAM,CAACQ,SAAU;IAAAN,QAAA,EAC3BnD,YAAY,GACXrB,KAAA,CAACX,IAAI;MAACgF,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,GACnC1E,IAAA,CAACJ,iBAAiB;QAAC+E,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,EAClD5E,IAAA,CAACR,IAAI;QAAC+E,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAH,QAAA,EAAC;MAAc,CAAM,CAAC;IAAA,CAClD,CAAC,GAEPxE,KAAA,CAAAE,SAAA;MAAAsE,QAAA,GACExE,KAAA,CAACX,IAAI;QAACgF,KAAK,EAAEC,MAAM,CAACS,iBAAkB;QAAAP,QAAA,GACpC1E,IAAA,CAACR,IAAI;UAAC+E,KAAK,EAAEC,MAAM,CAACO,YAAa;UAAAL,QAAA,EAAEK;QAAY,CAAO,CAAC,EACvD/E,IAAA,CAACT,IAAI;UAACgF,KAAK,EAAEC,MAAM,CAACU,WAAY;UAAAR,QAAA,EAC9B1E,IAAA,CAACT,IAAI;YACHgF,KAAK,EAAE,CACLC,MAAM,CAACW,YAAY,EACnB;cACEC,KAAK,EACF,CAACrE,oBAAoB,GAAG,CAAC,IAAIJ,SAAS,CAACsC,MAAM,GAAI,GAAG;YAEzD,CAAC;UACD,CACH;QAAC,CACE,CAAC;MAAA,CACH,CAAC,EAEPjD,IAAA,CAACT,IAAI;QAACgF,KAAK,EAAEC,MAAM,CAACa,iBAAkB;QAAAX,QAAA,EACpC1E,IAAA,CAACR,IAAI;UAAC+E,KAAK,EAAEC,MAAM,CAACc,YAAa;UAAAZ,QAAA,EAC9BI,eAAe,CAACS;QAAa,CAC1B;MAAC,CACH,CAAC,EAEPrF,KAAA,CAACX,IAAI;QAACgF,KAAK,EAAEC,MAAM,CAACgB,gBAAiB;QAAAd,QAAA,GACnC1E,IAAA,CAACN,gBAAgB;UACf6E,KAAK,EAAEC,MAAM,CAACiB,YAAa;UAC3BpD,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQkB,kBAAkB,CAAC,GAAG,CAAC;UAAA,CAAC;UAAAmB,QAAA,EAEvCxE,KAAA,CAACV,IAAI;YAAC+E,KAAK,EAAEC,MAAM,CAACkB,UAAW;YAAAhB,QAAA,GAAC,KAC3B,EAACI,eAAe,CAACa,QAAQ;UAAA,CACxB;QAAC,CACS,CAAC,EAEnB3F,IAAA,CAACN,gBAAgB;UACf6E,KAAK,EAAEC,MAAM,CAACiB,YAAa;UAC3BpD,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQkB,kBAAkB,CAAC,GAAG,CAAC;UAAA,CAAC;UAAAmB,QAAA,EAEvCxE,KAAA,CAACV,IAAI;YAAC+E,KAAK,EAAEC,MAAM,CAACkB,UAAW;YAAAhB,QAAA,GAAC,KAC3B,EAACI,eAAe,CAACc,QAAQ;UAAA,CACxB;QAAC,CACS,CAAC;MAAA,CACf,CAAC;IAAA,CACP;EACH,CACG,CAAC;AAEX,CAAC;AAED,IAAMpB,MAAM,GAAG/E,UAAU,CAACoG,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE;EACX,CAAC;EACDf,iBAAiB,EAAE;IACjBgB,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE;EAChB,CAAC;EACDnB,YAAY,EAAE;IACZH,KAAK,EAAE,SAAS;IAChBuB,QAAQ,EAAE,EAAE;IACZD,YAAY,EAAE,CAAC;IACfE,SAAS,EAAE;EACb,CAAC;EACDlB,WAAW,EAAE;IACXmB,MAAM,EAAE,CAAC;IACTN,eAAe,EAAE,WAAW;IAC5BO,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDpB,YAAY,EAAE;IACZkB,MAAM,EAAE,MAAM;IACdN,eAAe,EAAE,SAAS;IAC1BO,YAAY,EAAE;EAChB,CAAC;EACDjB,iBAAiB,EAAE;IACjBmB,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE;EACd,CAAC;EACDnB,YAAY,EAAE;IACZV,KAAK,EAAE,SAAS;IAChBuB,QAAQ,EAAE,EAAE;IACZO,UAAU,EAAE,KAAK;IACjBN,SAAS,EAAE;EACb,CAAC;EACDZ,gBAAgB,EAAE;IAChBS,SAAS,EAAE;EACb,CAAC;EACDR,YAAY,EAAE;IACZM,eAAe,EAAE,WAAW;IAC5BC,OAAO,EAAE,EAAE;IACXM,YAAY,EAAE,EAAE;IAChBE,cAAc,EAAE;EAClB,CAAC;EACDd,UAAU,EAAE;IACVd,KAAK,EAAE,SAAS;IAChBuB,QAAQ,EAAE;EACZ,CAAC;EACD1B,gBAAgB,EAAE;IAChBqB,IAAI,EAAE,CAAC;IACPa,cAAc,EAAE,QAAQ;IACxBF,UAAU,EAAE;EACd,CAAC;EACD5B,WAAW,EAAE;IACXD,KAAK,EAAE,SAAS;IAChBuB,QAAQ,EAAE,EAAE;IACZF,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe5F,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}