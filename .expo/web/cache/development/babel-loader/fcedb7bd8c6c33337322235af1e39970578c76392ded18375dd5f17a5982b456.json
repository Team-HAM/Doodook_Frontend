{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FindPasswordScreen = function FindPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var handleSendCode = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email) {\n        Alert.alert(\"오류\", \"이메일을 입력해주세요.\");\n        return;\n      }\n      setLoading(true);\n      try {\n        var response = yield fetch(API_BASE_URL + \"users/password_reset/request/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email\n          })\n        });\n        var contentType = response.headers.get(\"content-type\");\n        if (!contentType || !contentType.includes(\"application/json\")) {\n          var textResponse = yield response.text();\n          console.error(\"서버 응답이 JSON이 아님:\", textResponse);\n          Alert.alert(\"오류\", \"서버 응답 형식 오류\");\n          setLoading(false);\n          return;\n        }\n        var data = yield response.json();\n        if (response.ok) {\n          Alert.alert(\"성공\", data.message || \"비밀번호 재설정 링크를 이메일로 보냈습니다.\", [{\n            text: \"다음\",\n            onPress: function onPress() {\n              return navigation.navigate(\"ResetPassword\", {\n                email: email\n              });\n            }\n          }]);\n        } else {\n          Alert.alert(\"오류\", data.message || \"비밀번호 찾기에 실패했습니다.\");\n        }\n      } catch (error) {\n        console.error(\"🚨 Network Error:\", error);\n        Alert.alert(\"오류\", \"네트워크 오류가 발생했습니다.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSendCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: styles.backButton,\n      children: _jsx(Text, {\n        style: styles.backText,\n        children: \"<\"\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"\\uAC00\\uC785 \\uC2DC \\uC0AC\\uC6A9\\uD55C \\uC774\\uBA54\\uC77C \\uC785\\uB825\",\n        placeholderTextColor: \"#ccc\",\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TouchableOpacity, {\n        style: [styles.sendButton, loading && styles.disabledButton],\n        onPress: handleSendCode,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.sendButtonText,\n          children: loading ? \"전송 중...\" : \"전송\"\n        })\n      })]\n    }), _jsx(Text, {\n      style: styles.infoText,\n      children: \"\\uAC00\\uC785\\uD558\\uC2E0 \\uC774\\uBA54\\uC77C\\uB85C \\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815 \\uB9C1\\uD06C\\uAC00 \\uBC1C\\uC1A1\\uB429\\uB2C8\\uB2E4.\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 30\n  },\n  backButton: {\n    position: \"absolute\",\n    top: 50,\n    left: 20,\n    zIndex: 10\n  },\n  backText: {\n    fontSize: 36,\n    color: \"#F074BA\"\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#F074BA\",\n    position: \"absolute\",\n    top: 150,\n    left: 30\n  },\n  label: {\n    fontSize: 16,\n    color: \"#F074BA\",\n    alignSelf: \"flex-start\",\n    marginTop: 10,\n    marginBottom: 10\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 8,\n    backgroundColor: \"#f9f9f9\",\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  input: {\n    flex: 1,\n    height: 50,\n    fontSize: 16,\n    color: \"black\"\n  },\n  sendButton: {\n    width: 60,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#CCCDD0\",\n    borderRadius: 16,\n    marginLeft: 10\n  },\n  disabledButton: {\n    backgroundColor: \"#A0A0A0\"\n  },\n  sendButtonText: {\n    fontSize: 14,\n    color: \"black\"\n  },\n  infoText: {\n    fontSize: 14,\n    color: \"#F074BA\",\n    textAlign: \"center\",\n    marginTop: 20,\n    opacity: 0.7\n  }\n});\nexport default FindPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","StyleSheet","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","FindPasswordScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","loading","setLoading","handleSendCode","_ref2","_asyncToGenerator","alert","response","fetch","method","headers","body","JSON","stringify","contentType","get","includes","textResponse","text","console","error","data","json","ok","message","onPress","navigate","apply","arguments","style","styles","container","children","goBack","backButton","backText","title","label","inputContainer","input","placeholder","placeholderTextColor","keyboardType","autoCapitalize","value","onChangeText","sendButton","disabledButton","disabled","sendButtonText","infoText","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","position","top","left","zIndex","fontSize","color","fontWeight","alignSelf","marginTop","marginBottom","flexDirection","width","borderWidth","borderColor","borderRadius","height","marginLeft","textAlign","opacity"],"sources":["/Users/seungyeon/Doodook_Frontend/src/screens/Auth/FindPasswordScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n  StyleSheet,\n} from \"react-native\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\n\nconst FindPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSendCode = async () => {\n    if (!email) {\n      Alert.alert(\"오류\", \"이메일을 입력해주세요.\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}users/password_reset/request/`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ email }),\n        }\n      );\n\n      // 응답 타입 확인\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        const textResponse = await response.text();\n        console.error(\"서버 응답이 JSON이 아님:\", textResponse);\n        Alert.alert(\"오류\", \"서버 응답 형식 오류\");\n        setLoading(false);\n        return;\n      }\n\n      const data = await response.json();\n\n      if (response.ok) {\n        Alert.alert(\n          \"성공\",\n          data.message || \"비밀번호 재설정 링크를 이메일로 보냈습니다.\",\n          [\n            {\n              text: \"다음\",\n              onPress: () =>\n                navigation.navigate(\"ResetPassword\", { email: email }),\n            },\n          ]\n        );\n      } else {\n        Alert.alert(\"오류\", data.message || \"비밀번호 찾기에 실패했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"🚨 Network Error:\", error);\n      Alert.alert(\"오류\", \"네트워크 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* 🔙 뒤로 가기 버튼 */}\n      <TouchableOpacity\n        onPress={() => navigation.goBack()}\n        style={styles.backButton}\n      >\n        <Text style={styles.backText}>{\"<\"}</Text>\n      </TouchableOpacity>\n\n      {/* 🏷 타이틀 */}\n      <Text style={styles.title}>비밀번호 찾기</Text>\n\n      {/* 📧 이메일 입력 */}\n      <Text style={styles.label}>이메일</Text>\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"가입 시 사용한 이메일 입력\"\n          placeholderTextColor=\"#ccc\"\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          value={email}\n          onChangeText={setEmail}\n        />\n        <TouchableOpacity\n          style={[styles.sendButton, loading && styles.disabledButton]}\n          onPress={handleSendCode}\n          disabled={loading}\n        >\n          <Text style={styles.sendButtonText}>\n            {loading ? \"전송 중...\" : \"전송\"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <Text style={styles.infoText}>\n        가입하신 이메일로 비밀번호 재설정 링크가 발송됩니다.\n      </Text>\n    </View>\n  );\n};\n\n// ✅ 스타일 정의\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 30,\n  },\n\n  backButton: {\n    position: \"absolute\",\n    top: 50,\n    left: 20,\n    zIndex: 10,\n  },\n  backText: {\n    fontSize: 36,\n    color: \"#F074BA\",\n  },\n\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#F074BA\",\n    position: \"absolute\",\n    top: 150,\n    left: 30,\n  },\n\n  label: {\n    fontSize: 16,\n    color: \"#F074BA\",\n    alignSelf: \"flex-start\",\n    marginTop: 10,\n    marginBottom: 10,\n  },\n\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 8,\n    backgroundColor: \"#f9f9f9\",\n    marginBottom: 10,\n    paddingHorizontal: 10,\n  },\n\n  input: {\n    flex: 1,\n    height: 50,\n    fontSize: 16,\n    color: \"black\",\n  },\n\n  sendButton: {\n    width: 60,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#CCCDD0\",\n    borderRadius: 16,\n    marginLeft: 10,\n  },\n\n  disabledButton: {\n    backgroundColor: \"#A0A0A0\",\n  },\n\n  sendButtonText: {\n    fontSize: 14,\n    color: \"black\",\n  },\n\n  infoText: {\n    fontSize: 14,\n    color: \"#F074BA\",\n    textAlign: \"center\",\n    marginTop: 20,\n    opacity: 0.7,\n  },\n});\n\nexport default FindPasswordScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}