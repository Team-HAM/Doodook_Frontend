{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { getNewAccessToken } from \"./token\";\nimport { API_BASE_URL } from \"./apiConfig\";\nexport var increaseBalance = function () {\n  var _ref = _asyncToGenerator(function* (navigation, amount) {\n    try {\n      var accessToken = yield getNewAccessToken(navigation);\n      if (!accessToken) {\n        console.error(\"액세스 토큰이 없습니다.\");\n        return;\n      }\n      var response = yield fetch(API_BASE_URL + \"point/increase_balance/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: amount\n        })\n      });\n      var text = yield response.text();\n      console.log(\"예수금 추가 응답 본문:\", text);\n      var data = JSON.parse(text);\n      if (data.status === \"success\") {\n        return data.message;\n      } else {\n        throw new Error(data.message || \"알 수 없는 오류 발생\");\n      }\n    } catch (err) {\n      console.error(\"예수금 추가 실패:\", err);\n      throw err;\n    }\n  });\n  return function increaseBalance(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["AsyncStorage","getNewAccessToken","API_BASE_URL","increaseBalance","_ref","_asyncToGenerator","navigation","amount","accessToken","console","error","response","fetch","method","headers","Authorization","body","JSON","stringify","text","log","data","parse","status","message","Error","err","_x","_x2","apply","arguments"],"sources":["/Users/seungyeon/Doodook_Frontend/src/utils/point.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { getNewAccessToken } from \"./token\";\nimport { API_BASE_URL } from \"./apiConfig\";\n\nexport const increaseBalance = async (navigation, amount) => {\n  try {\n    const accessToken = await getNewAccessToken(navigation);\n    if (!accessToken) {\n      console.error(\"액세스 토큰이 없습니다.\");\n      return;\n    }\n\n    const response = await fetch(`${API_BASE_URL}point/increase_balance/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ amount }),\n    });\n\n    const text = await response.text();\n    console.log(\"예수금 추가 응답 본문:\", text);\n\n    const data = JSON.parse(text);\n\n    if (data.status === \"success\") {\n      return data.message;\n    } else {\n      throw new Error(data.message || \"알 수 없는 오류 발생\");\n    }\n  } catch (err) {\n    console.error(\"예수금 추가 실패:\", err);\n    throw err;\n  }\n};\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,SAASC,iBAAiB;AAC1B,SAASC,YAAY;AAErB,OAAO,IAAMC,eAAe;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,UAAU,EAAEC,MAAM,EAAK;IAC3D,IAAI;MACF,IAAMC,WAAW,SAASP,iBAAiB,CAACK,UAAU,CAAC;MACvD,IAAI,CAACE,WAAW,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC;QAC9B;MACF;MAEA,IAAMC,QAAQ,SAASC,KAAK,CAAIV,YAAY,8BAA2B;QACrEW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,cAAYP,WAAa;UACtC,cAAc,EAAE;QAClB,CAAC;QACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX,MAAM,EAANA;QAAO,CAAC;MACjC,CAAC,CAAC;MAEF,IAAMY,IAAI,SAASR,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACW,GAAG,CAAC,eAAe,EAAED,IAAI,CAAC;MAElC,IAAME,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACH,IAAI,CAAC;MAE7B,IAAIE,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;QAC7B,OAAOF,IAAI,CAACG,OAAO;MACrB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAACJ,IAAI,CAACG,OAAO,IAAI,cAAc,CAAC;MACjD;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZjB,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEgB,GAAG,CAAC;MAChC,MAAMA,GAAG;IACX;EACF,CAAC;EAAA,gBA/BYvB,eAAeA,CAAAwB,EAAA,EAAAC,GAAA;IAAA,OAAAxB,IAAA,CAAAyB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA+B3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}