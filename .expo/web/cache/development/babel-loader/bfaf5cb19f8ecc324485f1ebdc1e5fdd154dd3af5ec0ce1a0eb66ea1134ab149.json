{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MainScreen from \"../screens/Main/MainScreen\";\nimport GuideScreen from \"../screens/Guide/GuideScreen\";\nimport ChatbotScreen from \"../screens/Chatbot/ChatbotScreen\";\nimport MyPageScreen from \"../screens/MyPage/MyPageScreen\";\nimport HomeIcon from \"../assets/icons/home.svg\";\nimport HomeSelectedIcon from \"../assets/icons/home-selected.svg\";\nimport ChatbotIcon from \"../assets/icons/chatbot.svg\";\nimport ChatbotSelectedIcon from \"../assets/icons/chatbot-selected.svg\";\nimport MyPageIcon from \"../assets/icons/mypage.svg\";\nimport MyPageSelectedIcon from \"../assets/icons/mypage-selected.svg\";\nimport GuideIcon from \"../assets/icons/guide.svg\";\nimport GuideSelectedIcon from \"../assets/icons/guide-selected.svg\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar MainTab = function MainTab() {\n  console.log('MainTab 나타났음');\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarStyle: {\n          backgroundColor: '#003340',\n          borderTopColor: 'transparent',\n          height: 65,\n          paddingBottom: 15,\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          elevation: 0,\n          zIndex: 999\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            size = _ref2.size;\n          console.log(\"Tab pressed: \" + route.name + \", focused: \" + focused);\n          var Icon;\n          if (route.name === 'Home') {\n            Icon = focused ? HomeSelectedIcon : HomeIcon;\n          } else if (route.name === 'Guide') {\n            Icon = focused ? GuideSelectedIcon : GuideIcon;\n          } else if (route.name === 'Chatbot') {\n            Icon = focused ? ChatbotSelectedIcon : ChatbotIcon;\n          } else {\n            Icon = focused ? MyPageSelectedIcon : MyPageIcon;\n          }\n          return _jsx(Icon, {\n            width: 50,\n            height: 50\n          });\n        },\n        tabBarShowLabel: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: MainScreen,\n      listeners: {\n        tabPress: function tabPress(e) {\n          console.log('Home tab pressed');\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Guide\",\n      component: GuideScreen,\n      listeners: {\n        tabPress: function tabPress(e) {\n          console.log('Guide tab pressed');\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Chatbot\",\n      component: ChatbotScreen,\n      listeners: {\n        tabPress: function tabPress(e) {\n          console.log('Chatbot tab pressed');\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"MyPage\",\n      component: MyPageScreen,\n      listeners: {\n        tabPress: function tabPress(e) {\n          console.log('MyPage tab pressed');\n        }\n      }\n    })]\n  });\n};\nexport default MainTab;","map":{"version":3,"names":["React","createBottomTabNavigator","MainScreen","GuideScreen","ChatbotScreen","MyPageScreen","HomeIcon","HomeSelectedIcon","ChatbotIcon","ChatbotSelectedIcon","MyPageIcon","MyPageSelectedIcon","GuideIcon","GuideSelectedIcon","jsx","_jsx","jsxs","_jsxs","Tab","MainTab","console","log","Navigator","screenOptions","_ref","route","headerShown","tabBarStyle","backgroundColor","borderTopColor","height","paddingBottom","position","bottom","left","right","elevation","zIndex","tabBarIcon","_ref2","focused","size","name","Icon","width","tabBarShowLabel","children","Screen","component","listeners","tabPress","e"],"sources":["/Users/seungyeon/Doodook_Frontend/src/navigation/MainTab.js"],"sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MainScreen from '../screens/Main/MainScreen';\nimport GuideScreen from '../screens/Guide/GuideScreen';\nimport ChatbotScreen from '../screens/Chatbot/ChatbotScreen';\nimport MyPageScreen from '../screens/MyPage/MyPageScreen';\n\n// SVG imports\nimport HomeIcon from '../assets/icons/home.svg';\nimport HomeSelectedIcon from '../assets/icons/home-selected.svg';\nimport ChatbotIcon from '../assets/icons/chatbot.svg';\nimport ChatbotSelectedIcon from '../assets/icons/chatbot-selected.svg';\nimport MyPageIcon from '../assets/icons/mypage.svg';\nimport MyPageSelectedIcon from '../assets/icons/mypage-selected.svg';\nimport GuideIcon from '../assets/icons/guide.svg';\nimport GuideSelectedIcon from '../assets/icons/guide-selected.svg';\nconst Tab = createBottomTabNavigator();\n\nconst MainTab = () => {\n  console.log('MainTab 나타났음');\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarStyle: {\n          backgroundColor: '#003340',\n          borderTopColor: 'transparent',\n          height: 65,\n          paddingBottom: 15,\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          right: 0,\n          elevation: 0,\n          zIndex: 999,\n        },\n        tabBarIcon: ({ focused, size }) => {\n          console.log(`Tab pressed: ${route.name}, focused: ${focused}`);\n          let Icon;\n          if (route.name === 'Home') {\n            Icon = focused ? HomeSelectedIcon : HomeIcon;\n          } else if (route.name === 'Guide') {\n            Icon = focused ? GuideSelectedIcon : GuideIcon;\n          } else if (route.name === 'Chatbot') {\n            Icon = focused ? ChatbotSelectedIcon : ChatbotIcon;\n          } else {\n            Icon = focused ? MyPageSelectedIcon : MyPageIcon;\n          }\n          return <Icon width={50} height={50} />;\n        },\n        tabBarShowLabel: false,\n      })}>\n      <Tab.Screen\n        name=\"Home\"\n        component={MainScreen}\n        listeners={{\n          tabPress: e => {\n            console.log('Home tab pressed');\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Guide\"\n        component={GuideScreen}\n        listeners={{\n          tabPress: e => {\n            console.log('Guide tab pressed');\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Chatbot\"\n        component={ChatbotScreen}\n        listeners={{\n          tabPress: e => {\n            console.log('Chatbot tab pressed');\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"MyPage\"\n        component={MyPageScreen}\n        listeners={{\n          tabPress: e => {\n            console.log('MyPage tab pressed');\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default MainTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}