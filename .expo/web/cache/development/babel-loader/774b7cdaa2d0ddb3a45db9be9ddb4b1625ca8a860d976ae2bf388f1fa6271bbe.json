{"ast":null,"code":"import getTokenTypeByToken from \"./getTokenTypeByToken\";\nimport flattenInlineTokens from \"./flattenInlineTokens\";\nimport renderInlineAsText from \"./renderInlineAsText\";\nexport function cleanupTokens(tokens) {\n  tokens = flattenInlineTokens(tokens);\n  tokens.forEach(function (token) {\n    token.type = getTokenTypeByToken(token);\n    if (token.type === 'image' || token.type === 'hardbreak') {\n      token.block = true;\n    }\n    if (token.type === 'image') {\n      token.attrs[token.attrIndex('alt')][1] = renderInlineAsText(token.children);\n    }\n  });\n  var stack = [];\n  tokens = tokens.reduce(function (acc, token, index) {\n    if (token.type === 'link' && token.nesting === 1) {\n      stack.push(token);\n    } else if (stack.length > 0 && token.type === 'link' && token.nesting === -1) {\n      if (stack.some(function (stackToken) {\n        return stackToken.block;\n      })) {\n        stack[0].type = 'blocklink';\n        stack[0].block = true;\n        token.type = 'blocklink';\n        token.block = true;\n      }\n      stack.push(token);\n      while (stack.length) {\n        acc.push(stack.shift());\n      }\n    } else if (stack.length > 0) {\n      stack.push(token);\n    } else {\n      acc.push(token);\n    }\n    return acc;\n  }, []);\n  return tokens;\n}","map":{"version":3,"names":["getTokenTypeByToken","flattenInlineTokens","renderInlineAsText","cleanupTokens","tokens","forEach","token","type","block","attrs","attrIndex","children","stack","reduce","acc","index","nesting","push","length","some","stackToken","shift"],"sources":["/Users/seungyeon/Doodook_Frontend/node_modules/react-native-markdown-display/src/lib/util/cleanupTokens.js"],"sourcesContent":["import getTokenTypeByToken from './getTokenTypeByToken';\nimport flattenInlineTokens from './flattenInlineTokens';\nimport renderInlineAsText from './renderInlineAsText';\n\nexport function cleanupTokens(tokens) {\n  tokens = flattenInlineTokens(tokens);\n  tokens.forEach((token) => {\n    token.type = getTokenTypeByToken(token);\n\n    // set image and hardbreak to block elements\n    if (token.type === 'image' || token.type === 'hardbreak') {\n      token.block = true;\n    }\n\n    // Set img alt text\n    if (token.type === 'image') {\n      token.attrs[token.attrIndex('alt')][1] = renderInlineAsText(\n        token.children,\n      );\n    }\n  });\n\n  /**\n   * changing a link token to a blocklink to fix issue where link tokens with\n   * nested non text tokens breaks component\n   */\n  const stack = [];\n  tokens = tokens.reduce((acc, token, index) => {\n    if (token.type === 'link' && token.nesting === 1) {\n      stack.push(token);\n    } else if (\n      stack.length > 0 &&\n      token.type === 'link' &&\n      token.nesting === -1\n    ) {\n      if (stack.some((stackToken) => stackToken.block)) {\n        stack[0].type = 'blocklink';\n        stack[0].block = true;\n        token.type = 'blocklink';\n        token.block = true;\n      }\n\n      stack.push(token);\n\n      while (stack.length) {\n        acc.push(stack.shift());\n      }\n    } else if (stack.length > 0) {\n      stack.push(token);\n    } else {\n      acc.push(token);\n    }\n\n    return acc;\n  }, []);\n\n  return tokens;\n}\n"],"mappings":"AAAA,OAAOA,mBAAmB;AAC1B,OAAOC,mBAAmB;AAC1B,OAAOC,kBAAkB;AAEzB,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAE;EACpCA,MAAM,GAAGH,mBAAmB,CAACG,MAAM,CAAC;EACpCA,MAAM,CAACC,OAAO,CAAC,UAACC,KAAK,EAAK;IACxBA,KAAK,CAACC,IAAI,GAAGP,mBAAmB,CAACM,KAAK,CAAC;IAGvC,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,IAAID,KAAK,CAACC,IAAI,KAAK,WAAW,EAAE;MACxDD,KAAK,CAACE,KAAK,GAAG,IAAI;IACpB;IAGA,IAAIF,KAAK,CAACC,IAAI,KAAK,OAAO,EAAE;MAC1BD,KAAK,CAACG,KAAK,CAACH,KAAK,CAACI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGR,kBAAkB,CACzDI,KAAK,CAACK,QACR,CAAC;IACH;EACF,CAAC,CAAC;EAMF,IAAMC,KAAK,GAAG,EAAE;EAChBR,MAAM,GAAGA,MAAM,CAACS,MAAM,CAAC,UAACC,GAAG,EAAER,KAAK,EAAES,KAAK,EAAK;IAC5C,IAAIT,KAAK,CAACC,IAAI,KAAK,MAAM,IAAID,KAAK,CAACU,OAAO,KAAK,CAAC,EAAE;MAChDJ,KAAK,CAACK,IAAI,CAACX,KAAK,CAAC;IACnB,CAAC,MAAM,IACLM,KAAK,CAACM,MAAM,GAAG,CAAC,IAChBZ,KAAK,CAACC,IAAI,KAAK,MAAM,IACrBD,KAAK,CAACU,OAAO,KAAK,CAAC,CAAC,EACpB;MACA,IAAIJ,KAAK,CAACO,IAAI,CAAC,UAACC,UAAU;QAAA,OAAKA,UAAU,CAACZ,KAAK;MAAA,EAAC,EAAE;QAChDI,KAAK,CAAC,CAAC,CAAC,CAACL,IAAI,GAAG,WAAW;QAC3BK,KAAK,CAAC,CAAC,CAAC,CAACJ,KAAK,GAAG,IAAI;QACrBF,KAAK,CAACC,IAAI,GAAG,WAAW;QACxBD,KAAK,CAACE,KAAK,GAAG,IAAI;MACpB;MAEAI,KAAK,CAACK,IAAI,CAACX,KAAK,CAAC;MAEjB,OAAOM,KAAK,CAACM,MAAM,EAAE;QACnBJ,GAAG,CAACG,IAAI,CAACL,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC;MACzB;IACF,CAAC,MAAM,IAAIT,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;MAC3BN,KAAK,CAACK,IAAI,CAACX,KAAK,CAAC;IACnB,CAAC,MAAM;MACLQ,GAAG,CAACG,IAAI,CAACX,KAAK,CAAC;IACjB;IAEA,OAAOQ,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOV,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}