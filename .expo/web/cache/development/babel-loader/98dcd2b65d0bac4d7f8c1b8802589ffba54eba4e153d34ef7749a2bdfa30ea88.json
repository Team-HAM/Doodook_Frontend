{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\nimport { getNewAccessToken } from \"../../utils/token\";\nimport { fetchUserInfo } from \"../../utils/user\";\nimport { fetchUserMbtiType, getMbtiImage } from \"../../utils/mbtiType\";\nimport { increaseBalance } from \"../../utils/point\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyPageScreen = function MyPageScreen(_ref) {\n  var navigation = _ref.navigation;\n  console.log(\"📌 MyPageScreen 렌더링\");\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userInfo = _useState2[0],\n    setUserInfo = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    badgeList = _useState6[0],\n    setBadgeList = _useState6[1];\n  var _useState7 = useState([\"🔥\", \"🌟\", \"💯\"]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    equippedBadges = _useState8[0],\n    setEquippedBadges = _useState8[1];\n  var _useState9 = useState(\"티끌 모아 태산이긴해!\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    introText = _useState10[0],\n    setIntroText = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isEditingIntro = _useState12[0],\n    setIsEditingIntro = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    mbtiType = _useState14[0],\n    setMbtiType = _useState14[1];\n  var DEPOSIT_AMOUNT = 100000;\n  useEffect(function () {\n    fetchUserMbtiType(navigation, setMbtiType);\n  }, []);\n  var saveIntroText = function () {\n    var _ref2 = _asyncToGenerator(function* (text) {\n      try {\n        console.log(\"✔ 한줄소개 저장됨:\", text);\n      } catch (err) {\n        Alert.alert(\"저장 실패\", \"한줄소개 저장에 실패했습니다.\");\n      }\n    });\n    return function saveIntroText(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var MenuButton = function MenuButton(_ref3) {\n    var label = _ref3.label,\n      onPress = _ref3.onPress;\n    return _jsx(TouchableOpacity, {\n      style: styles.menuButton,\n      onPress: onPress,\n      children: _jsxs(View, {\n        style: styles.menuRow,\n        children: [_jsx(Text, {\n          style: styles.menuText,\n          children: label\n        }), _jsx(Icon, {\n          name: \"chevron-right\",\n          size: 20,\n          color: \"#ffffff\"\n        })]\n      })\n    });\n  };\n  var handleLogout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var accessToken = yield getNewAccessToken(navigation);\n        if (!accessToken) {\n          Alert.alert(\"인증 오류\", \"토큰이 만료되었습니다. 다시 로그인해주세요.\");\n          navigation.navigate(\"Login\");\n          return;\n        }\n        var response = yield fetch(API_BASE_URL + \"logout/\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + accessToken,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          Alert.alert(\"로그아웃\", \"정상적으로 로그아웃되었습니다.\");\n          navigation.navigate(\"Login\");\n        } else {\n          var text = yield response.text();\n          console.error(\"로그아웃 실패 응답:\", text);\n          Alert.alert(\"오류\", \"로그아웃에 실패했습니다.\");\n        }\n      } catch (err) {\n        console.error(\"로그아웃 중 오류:\", err);\n        Alert.alert(\"오류\", \"네트워크 오류로 로그아웃에 실패했습니다.\");\n      }\n    });\n    return function handleLogout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleDeleteAccount = function handleDeleteAccount() {\n    Alert.alert(\"회원 탈퇴\", \"정말 탈퇴하시겠습니까?\\n이 작업은 되돌릴 수 없습니다.\", [{\n      text: \"취소\",\n      style: \"cancel\"\n    }, {\n      text: \"탈퇴하기\",\n      style: \"destructive\",\n      onPress: function () {\n        var _onPress = _asyncToGenerator(function* () {\n          try {\n            var accessToken = yield getNewAccessToken(navigation);\n            if (!accessToken) {\n              Alert.alert(\"인증 오류\", \"토큰이 만료되었습니다. 다시 로그인해주세요.\");\n              navigation.navigate(\"Login\");\n              return;\n            }\n            var response = yield fetch(API_BASE_URL + \"users/delete/\", {\n              method: \"DELETE\",\n              headers: {\n                Authorization: \"Bearer \" + accessToken,\n                \"Content-Type\": \"application/json\"\n              }\n            });\n            if (response.ok) {\n              Alert.alert(\"탈퇴 완료\", \"계정이 삭제되었습니다.\");\n              navigation.navigate(\"Login\");\n            } else {\n              var text = yield response.text();\n              console.error(\"회원 탈퇴 실패 응답:\", text);\n              Alert.alert(\"오류\", \"회원 탈퇴에 실패했습니다.\");\n            }\n          } catch (err) {\n            console.error(\"회원 탈퇴 중 오류:\", err);\n            Alert.alert(\"오류\", \"네트워크 오류로 탈퇴에 실패했습니다.\");\n          }\n        });\n        function onPress() {\n          return _onPress.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  useEffect(function () {\n    var loadUserData = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        try {\n          var accessToken = yield getNewAccessToken(navigation);\n          if (!accessToken) {\n            console.error(\"❌ 액세스 토큰 없음, 로그인으로 이동\");\n            Alert.alert(\"인증 만료\", \"다시 로그인해주세요.\");\n            navigation.navigate(\"Login\");\n            return;\n          }\n          yield fetchUserInfo(navigation, setUserInfo);\n        } catch (err) {\n          console.error(\"❌ 사용자 정보 불러오기 실패:\", err);\n          Alert.alert(\"오류\", \"사용자 정보를 불러오지 못했습니다.\");\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function loadUserData() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    loadUserData();\n  }, []);\n  if (loading) {\n    return _jsx(View, {\n      style: [styles.container, {\n        justifyContent: \"center\"\n      }],\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#F074BA\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.profileSection,\n      children: [_jsx(View, {\n        style: styles.profileLeft,\n        children: _jsx(Image, {\n          source: mbtiType && getMbtiImage(mbtiType) ? getMbtiImage(mbtiType) : require(\"../../assets/profile.png\"),\n          style: styles.profileImage\n        })\n      }), _jsxs(View, {\n        style: styles.profileRight,\n        children: [_jsx(View, {\n          style: styles.badgeRow,\n          children: equippedBadges.map(function (badge, index) {\n            return _jsx(View, {\n              style: styles.badgeBox,\n              children: _jsx(Text, {\n                style: styles.badgeText,\n                children: badge\n              })\n            }, index);\n          })\n        }), _jsx(Text, {\n          style: styles.userName,\n          children: (userInfo == null ? void 0 : userInfo.nickname) || \"잔고가 두둑한 햄스터\"\n        }), _jsxs(View, {\n          style: styles.introRow,\n          children: [_jsx(Icon, {\n            name: \"edit-3\",\n            size: 16,\n            color: \"#ccc\",\n            style: {\n              marginRight: 6\n            },\n            onPress: function onPress() {\n              return setIsEditingIntro(true);\n            }\n          }), isEditingIntro ? _jsx(TextInput, {\n            value: introText,\n            onChangeText: setIntroText,\n            onSubmitEditing: function onSubmitEditing() {\n              return setIsEditingIntro(false);\n            },\n            style: styles.introInput,\n            autoFocus: true\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setIsEditingIntro(true);\n            },\n            children: _jsxs(Text, {\n              style: styles.introText,\n              children: [\": \", introText]\n            })\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.divider\n    }), _jsx(Text, {\n      style: styles.moneyTitle,\n      children: \"\\uD83D\\uDC39 \\uD584\\uD584\\uC774\\uB124 \\uD574\\uBC14\\uB77C\\uAE30\\uC528 \\uB18D\\uC7A5\"\n    }), _jsxs(View, {\n      style: styles.moneyButtonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.tiggleButton,\n        onPress: _asyncToGenerator(function* () {\n          try {\n            var message = yield increaseBalance(navigation, DEPOSIT_AMOUNT);\n            Alert.alert(\"티끌 모으기\", message);\n          } catch (error) {\n            Alert.alert(\"에러\", error.message || \"티끌 모으기에 실패했습니다.\");\n          }\n        }),\n        children: _jsx(Text, {\n          style: styles.moneyButtonText,\n          children: \"\\uD2F0\\uB04C \\uBAA8\\uC73C\\uAE30\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.taesanButton,\n        onPress: function onPress() {\n          return navigation.navigate(\"Taesan\");\n        },\n        children: _jsx(Text, {\n          style: styles.moneyButtonText,\n          children: \"\\uD0DC\\uC0B0 \\uB9CC\\uB4E4\\uAE30\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.divider\n    }), _jsxs(ScrollView, {\n      contentContainerStyle: styles.menuContainer,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(MenuButton, {\n        label: \"\\uD68C\\uC6D0\\uC815\\uBCF4 \\uC218\\uC815\",\n        onPress: function onPress() {\n          return navigation.navigate(\"EditUserInfo\");\n        }\n      }), _jsx(MenuButton, {\n        label: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Notice\");\n        }\n      }), _jsx(MenuButton, {\n        label: \"\\uC790\\uC8FC \\uBB3B\\uB294 \\uC9C8\\uBB38(FAQ)\",\n        onPress: function onPress() {\n          return navigation.navigate(\"FAQ\");\n        }\n      }), _jsx(MenuButton, {\n        label: \"\\uB85C\\uADF8\\uC544\\uC6C3\",\n        onPress: handleLogout\n      }), _jsx(MenuButton, {\n        label: \"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\",\n        onPress: handleDeleteAccount\n      })]\n    })]\n  });\n};\nvar InfoItem = function InfoItem(_ref7) {\n  var label = _ref7.label,\n    value = _ref7.value;\n  return _jsxs(View, {\n    style: styles.infoBox,\n    children: [_jsxs(Text, {\n      style: styles.infoLabel,\n      children: [label, \":\"]\n    }), _jsx(Text, {\n      style: styles.infoValue,\n      children: value\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n    paddingHorizontal: 30,\n    paddingTop: 60\n  },\n  profileSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 30,\n    marginBottom: 0\n  },\n  profileLeft: {\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginRight: 30\n  },\n  profileRight: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  profileImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    borderWidth: 3,\n    borderColor: \"#FFFFFFB0\",\n    backgroundColor: \"#D4DDEF60\"\n  },\n  badgeRow: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginBottom: 0\n  },\n  badgeBox: {\n    backgroundColor: \"#FFFFFF80\",\n    borderRadius: 50,\n    paddingVertical: 6,\n    paddingHorizontal: 6,\n    marginRight: 8\n  },\n  badgeText: {\n    fontSize: 15,\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  userName: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#F8C7CC\",\n    marginTop: 10,\n    marginBottom: 5\n  },\n  introRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 0,\n    marginLeft: 0\n  },\n  introText: {\n    fontSize: 15,\n    color: \"#EEEEEE\"\n  },\n  introInput: {\n    fontSize: 14,\n    color: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#888\",\n    flex: 1\n  },\n  divider: {\n    height: 1,\n    backgroundColor: \"#4A5A60\",\n    marginVertical: 20\n  },\n  moneyTitle: {\n    color: \"#EEEEEE\",\n    fontSize: 18,\n    marginBottom: 20,\n    marginLeft: 15,\n    marginTop: 5,\n    fontWeight: \"600\"\n  },\n  moneyButtonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  tiggleButton: {\n    flex: 1,\n    backgroundColor: \"#5DB996E0\",\n    paddingVertical: 20,\n    borderRadius: 20,\n    marginHorizontal: 10,\n    alignItems: \"center\"\n  },\n  taesanButton: {\n    flex: 1,\n    backgroundColor: \"#F074BAE0\",\n    paddingVertical: 20,\n    borderRadius: 20,\n    marginHorizontal: 10,\n    alignItems: \"center\"\n  },\n  moneyButtonText: {\n    fontFamily: \"Times New Roman\",\n    color: \"#EFF1F5\",\n    fontSize: 18,\n    fontWeight: \"500\"\n  },\n  scrollContainer: {\n    width: \"100%\"\n  },\n  menuContainer: {\n    paddingVertical: 0,\n    paddingHorizontal: 0\n  },\n  menuRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  menuButton: {\n    backgroundColor: \"#D4DDEF30\",\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 13,\n    marginHorizontal: 5\n  },\n  menuText: {\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});\nexport default MyPageScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Image","ActivityIndicator","Alert","ScrollView","TouchableOpacity","Icon","API_BASE_URL","getNewAccessToken","fetchUserInfo","fetchUserMbtiType","getMbtiImage","increaseBalance","jsx","_jsx","jsxs","_jsxs","MyPageScreen","_ref","navigation","console","log","_useState","_useState2","_slicedToArray","userInfo","setUserInfo","_useState3","_useState4","loading","setLoading","_useState5","_useState6","badgeList","setBadgeList","_useState7","_useState8","equippedBadges","setEquippedBadges","_useState9","_useState10","introText","setIntroText","_useState11","_useState12","isEditingIntro","setIsEditingIntro","_useState13","_useState14","mbtiType","setMbtiType","DEPOSIT_AMOUNT","saveIntroText","_ref2","_asyncToGenerator","text","err","alert","_x","apply","arguments","MenuButton","_ref3","label","onPress","style","styles","menuButton","children","menuRow","menuText","name","size","color","handleLogout","_ref4","accessToken","navigate","response","fetch","method","headers","Authorization","ok","error","handleDeleteAccount","_onPress","loadUserData","_ref5","container","justifyContent","profileSection","profileLeft","source","require","profileImage","profileRight","badgeRow","map","badge","index","badgeBox","badgeText","userName","nickname","introRow","marginRight","TextInput","value","onChangeText","onSubmitEditing","introInput","autoFocus","divider","moneyTitle","moneyButtonContainer","tiggleButton","message","moneyButtonText","taesanButton","contentContainerStyle","menuContainer","showsVerticalScrollIndicator","InfoItem","_ref7","infoBox","infoLabel","infoValue","create","flex","backgroundColor","paddingHorizontal","paddingTop","flexDirection","alignItems","marginTop","marginBottom","marginLeft","width","height","borderRadius","borderWidth","borderColor","paddingVertical","fontSize","fontWeight","borderBottomWidth","borderBottomColor","marginVertical","marginHorizontal","fontFamily","scrollContainer","padding"],"sources":["/Users/seungyeon/Doodook_Frontend/src/screens/MyPage/MyPageScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  ActivityIndicator,\n  Alert,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/Feather\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\n\nimport { getNewAccessToken } from \"../../utils/token\";\nimport { fetchUserInfo } from \"../../utils/user\";\nimport { fetchUserMbtiType, getMbtiImage } from \"../../utils/mbtiType\";\nimport { increaseBalance } from \"../../utils/point\";\n\n\nconst MyPageScreen = ({ navigation }) => {\n  console.log(\"📌 MyPageScreen 렌더링\");\n\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [badgeList, setBadgeList] = useState([]); // 전체 뱃지\n\n  const [equippedBadges, setEquippedBadges] = useState([\"🔥\", \"🌟\", \"💯\"]);\n  const [introText, setIntroText] = useState(\"티끌 모아 태산이긴해!\");\n  const [isEditingIntro, setIsEditingIntro] = useState(false);\n\n  //const profileImage = require(\"../../assets/profile.png\");\n  const [mbtiType, setMbtiType] = useState(null);\n\n  const DEPOSIT_AMOUNT = 100000;\n\n\nuseEffect(() => {\n  fetchUserMbtiType(navigation, setMbtiType);\n}, []);\n\n\n  const saveIntroText = async (text) => {\n    try {\n      // 서버로 PATCH 요청\n      // await updateIntroAPI(text);\n      console.log(\"✔ 한줄소개 저장됨:\", text);\n    } catch (err) {\n      Alert.alert(\"저장 실패\", \"한줄소개 저장에 실패했습니다.\");\n    }\n  };\n\n  const MenuButton = ({ label, onPress }) => (\n    <TouchableOpacity style={styles.menuButton} onPress={onPress}>\n      <View style={styles.menuRow}>\n        <Text style={styles.menuText}>{label}</Text>\n        <Icon name=\"chevron-right\" size={20} color=\"#ffffff\" />\n      </View>\n    </TouchableOpacity>\n  );\n\n  // const handleLogout = () => {\n  //   Alert.alert(\"로그아웃\", \"정상적으로 로그아웃되었습니다.\");\n  //   navigation.navigate(\"Login\");\n  // };\n\n  const handleLogout = async () => {\n  try {\n    const accessToken = await getNewAccessToken(navigation);\n    if (!accessToken) {\n      Alert.alert(\n        \"인증 오류\",\n        \"토큰이 만료되었습니다. 다시 로그인해주세요.\"\n      );\n      navigation.navigate(\"Login\");\n      return;\n    }\n\n    const response = await fetch(`${API_BASE_URL}logout/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (response.ok) {\n      Alert.alert(\"로그아웃\", \"정상적으로 로그아웃되었습니다.\");\n      navigation.navigate(\"Login\");\n    } else {\n      const text = await response.text();\n      console.error(\"로그아웃 실패 응답:\", text);\n      Alert.alert(\"오류\", \"로그아웃에 실패했습니다.\");\n    }\n  } catch (err) {\n    console.error(\"로그아웃 중 오류:\", err);\n    Alert.alert(\"오류\", \"네트워크 오류로 로그아웃에 실패했습니다.\");\n  }\n};\n\n\n  const handleDeleteAccount = () => {\n    Alert.alert(\n      \"회원 탈퇴\",\n      \"정말 탈퇴하시겠습니까?\\n이 작업은 되돌릴 수 없습니다.\",\n      [\n        { text: \"취소\", style: \"cancel\" },\n        {\n          text: \"탈퇴하기\",\n          style: \"destructive\",\n          onPress: async () => {\n            try {\n              const accessToken = await getNewAccessToken(navigation);\n              if (!accessToken) {\n                Alert.alert(\n                  \"인증 오류\",\n                  \"토큰이 만료되었습니다. 다시 로그인해주세요.\"\n                );\n                navigation.navigate(\"Login\");\n                return;\n              }\n\n              const response = await fetch(\n                `${API_BASE_URL}users/delete/`,\n                {\n                  method: \"DELETE\",\n                  headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                    \"Content-Type\": \"application/json\",\n                  },\n                }\n              );\n\n              if (response.ok) {\n                Alert.alert(\"탈퇴 완료\", \"계정이 삭제되었습니다.\");\n                navigation.navigate(\"Login\");\n              } else {\n                const text = await response.text();\n                console.error(\"회원 탈퇴 실패 응답:\", text);\n                Alert.alert(\"오류\", \"회원 탈퇴에 실패했습니다.\");\n              }\n            } catch (err) {\n              console.error(\"회원 탈퇴 중 오류:\", err);\n              Alert.alert(\"오류\", \"네트워크 오류로 탈퇴에 실패했습니다.\");\n            }\n          },\n        },\n      ]\n    );\n  };\n\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const accessToken = await getNewAccessToken(navigation);\n        if (!accessToken) {\n          console.error(\"❌ 액세스 토큰 없음, 로그인으로 이동\");\n          Alert.alert(\"인증 만료\", \"다시 로그인해주세요.\");\n          navigation.navigate(\"Login\");\n          return;\n        }\n\n        await fetchUserInfo(navigation, setUserInfo);\n      } catch (err) {\n        console.error(\"❌ 사용자 정보 불러오기 실패:\", err);\n        Alert.alert(\"오류\", \"사용자 정보를 불러오지 못했습니다.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUserData();\n  }, []);\n\n  if (loading) {\n    return (\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\n        <ActivityIndicator size=\"large\" color=\"#F074BA\" />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.profileSection}>\n        {/* 왼쪽: 이미지 + 닉네임 */}\n        {/* <View style={styles.profileLeft}>\n          <Image\n            source={\n              userInfo?.profileImage\n                ? { uri: userInfo.profileImage }\n                : require(\"../../assets/profile.png\")\n            }\n            style={styles.profileImage}\n          />\n        </View> */}\n        <View style={styles.profileLeft}>\n  <Image\n    source={\n      mbtiType && getMbtiImage(mbtiType)\n        ? getMbtiImage(mbtiType)\n        : require(\"../../assets/profile.png\")\n    }\n    style={styles.profileImage}\n  />\n</View>\n\n\n\n\n        {/* 오른쪽: 뱃지 + 한줄소개 */}\n        <View style={styles.profileRight}>\n          <View style={styles.badgeRow}>\n            {equippedBadges.map((badge, index) => (\n              <View key={index} style={styles.badgeBox}>\n                <Text style={styles.badgeText}>{badge}</Text>\n              </View>\n            ))}\n          </View>\n          <Text style={styles.userName}>\n            {userInfo?.nickname || \"잔고가 두둑한 햄스터\"}\n          </Text>\n\n          <View style={styles.introRow}>\n            <Icon\n              name=\"edit-3\"\n              size={16}\n              color=\"#ccc\"\n              style={{ marginRight: 6 }}\n              onPress={() => setIsEditingIntro(true)}\n            />\n            {isEditingIntro ? (\n              <TextInput\n                value={introText}\n                onChangeText={setIntroText}\n                onSubmitEditing={() => setIsEditingIntro(false)}\n                style={styles.introInput}\n                autoFocus\n              />\n            ) : (\n              <TouchableOpacity onPress={() => setIsEditingIntro(true)}>\n                <Text style={styles.introText}>: {introText}</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      </View>\n\n      <View style={styles.divider} />\n      <Text style={styles.moneyTitle}>🐹 햄햄이네 해바라기씨 농장</Text>\n      <View style={styles.moneyButtonContainer}>\n        {/* <TouchableOpacity\n          style={styles.tiggleButton}\n          onPress={() => navigation.navigate(\"Tiggle\")}\n        >\n          <Text style={styles.moneyButtonText}>티끌 모으기</Text>\n        </TouchableOpacity> */}\n\n            <TouchableOpacity\n      style={styles.tiggleButton}\n      onPress={async () => {\n        try {\n          const message = await increaseBalance(navigation, DEPOSIT_AMOUNT);\n          Alert.alert(\"티끌 모으기\", message);\n        } catch (error) {\n          Alert.alert(\"에러\", error.message || \"티끌 모으기에 실패했습니다.\");\n        }\n      }}\n    >\n      <Text style={styles.moneyButtonText}>티끌 모으기</Text>\n    </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.taesanButton}\n          onPress={() => navigation.navigate(\"Taesan\")}\n        >\n          <Text style={styles.moneyButtonText}>태산 만들기</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.divider} />\n\n      <ScrollView\n        contentContainerStyle={styles.menuContainer}\n        showsVerticalScrollIndicator={false}\n      >\n        <MenuButton\n          label=\"회원정보 수정\"\n          onPress={() => navigation.navigate(\"EditUserInfo\")}\n        />\n        {/* <MenuButton\n          label=\"테마 설정\"\n          onPress={() => console.log(\"EditTheme\")}\n        /> */}\n        <MenuButton\n          label=\"공지사항\"\n          onPress={() => navigation.navigate(\"Notice\")}\n        />\n        <MenuButton\n          label=\"자주 묻는 질문(FAQ)\"\n          onPress={() =>  navigation.navigate(\"FAQ\")}\n        />\n        <MenuButton label=\"로그아웃\" onPress={handleLogout} />\n        <MenuButton label=\"회원 탈퇴\" onPress={handleDeleteAccount} />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst InfoItem = ({ label, value }) => (\n  <View style={styles.infoBox}>\n    <Text style={styles.infoLabel}>{label}:</Text>\n    <Text style={styles.infoValue}>{value}</Text>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  // container: {\n  //   flex: 1,\n  //   backgroundColor: '#003340',\n  //   alignItems: 'center',\n  //   padding: 20,\n  // },\n\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n    paddingHorizontal: 30,\n    paddingTop: 60,\n  },\n\n  profileSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 30,\n    marginBottom: 0,\n  },\n\n  profileLeft: {\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginRight: 30,\n  },\n\n  profileRight: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  profileImage: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    borderWidth: 3,\n    borderColor: \"#FFFFFFB0\",\n    backgroundColor: \"#D4DDEF60\", // ✅ 원하는 배경색\n\n  },\n  badgeRow: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginBottom: 0,\n  },\n  badgeBox: {\n    backgroundColor: \"#FFFFFF80\",\n    borderRadius: 50,\n    paddingVertical: 6,\n    paddingHorizontal: 6,\n    marginRight: 8,\n  },\n  badgeText: {\n    fontSize: 15,\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  userName: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#F8C7CC\",\n    marginTop: 10,\n    marginBottom: 5,\n  },\n\n  introRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 0,\n    marginLeft: 0,\n  },\n  introText: {\n    fontSize: 15,\n    color: \"#EEEEEE\",\n  },\n  introInput: {\n    fontSize: 14,\n    color: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#888\",\n    flex: 1,\n  },\n\n  divider: {\n    height: 1,\n    backgroundColor: \"#4A5A60\",\n    marginVertical: 20,\n  },\n\n  moneyTitle: {\n    color: \"#EEEEEE\",\n    fontSize: 18,\n    marginBottom: 20,\n    marginLeft: 15,\n    marginTop: 5,\n    fontWeight: \"600\",\n  },\n\n  moneyButtonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n\n  tiggleButton: {\n    flex: 1,\n    backgroundColor: \"#5DB996E0\",\n    paddingVertical: 20,\n    borderRadius: 20,\n    marginHorizontal: 10,\n    alignItems: \"center\",\n  },\n\n  taesanButton: {\n    flex: 1,\n    backgroundColor: \"#F074BAE0\",\n    paddingVertical: 20,\n    borderRadius: 20,\n    marginHorizontal: 10,\n    alignItems: \"center\",\n  },\n\n  moneyButtonText: {\n    fontFamily: \"Times New Roman\",\n    color: \"#EFF1F5\",\n    fontSize: 18,\n    fontWeight: \"500\",\n    // textShadowColor: '#CCC',\n    // textShadowOffset: { width: 1, height: 1 },\n    // textShadowRadius: 3,\n  },\n\n  scrollContainer: {\n    width: \"100%\",\n  },\n  menuContainer: {\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n  },\n  menuRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  menuButton: {\n    backgroundColor: \"#D4DDEF30\",\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 13,\n    marginHorizontal: 5,\n  },\n  menuText: {\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default MyPageScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}