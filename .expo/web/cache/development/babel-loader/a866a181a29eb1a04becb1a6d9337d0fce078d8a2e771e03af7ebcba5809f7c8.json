{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { getNewAccessToken } from \"../../utils/token\";\nimport { fetchUserInfo } from \"../../utils/user\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar TradingSellScreen = function TradingSellScreen(_ref) {\n  var _route$params;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var stock = (_route$params = route.params) == null ? void 0 : _route$params.stock;\n  var _useState = useState(\"1\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    quantity = _useState2[0],\n    setQuantity = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPrice = _useState4[0],\n    setCurrentPrice = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userId = _useState6[0],\n    setUserId = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    priceLoading = _useState10[0],\n    setPriceLoading = _useState10[1];\n  useEffect(function () {\n    var init = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        yield fetchUserInfo(navigation, function (info) {\n          if (info != null && info.id) setUserId(info.id);\n        });\n        yield fetchCurrentPrice();\n      });\n      return function init() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    init();\n  }, []);\n  var fetchCurrentPrice = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!(stock != null && stock.symbol)) {\n        console.error(\"❌ 종목 코드가 없습니다.\");\n        setPriceLoading(false);\n        return;\n      }\n      try {\n        setPriceLoading(true);\n        var response = yield fetch(API_BASE_URL + \"trading/stock_price/?stock_code=\" + stock.symbol);\n        if (!response.ok) {\n          throw new Error(\"Price API error: \" + response.status);\n        }\n        var result = yield response.json();\n        if (result.status === \"success\" && result.current_price) {\n          setCurrentPrice(result.current_price);\n          console.log(\"✅ 현재가 업데이트:\", result.current_price);\n        } else {\n          console.warn(\"⚠️ 현재가 API 응답 실패:\", result);\n          setCurrentPrice(typeof stock.price === \"string\" ? parseInt(stock.price.replace(/,/g, \"\")) : stock.price);\n        }\n      } catch (error) {\n        console.error(\"❌ 현재가 조회 실패:\", error);\n        setCurrentPrice(typeof stock.price === \"string\" ? parseInt(stock.price.replace(/,/g, \"\")) : stock.price);\n      } finally {\n        setPriceLoading(false);\n      }\n    });\n    return function fetchCurrentPrice() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var calculateTotal = function calculateTotal() {\n    var qty = parseInt(quantity) || 0;\n    return currentPrice * qty;\n  };\n  var handleSell = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      console.log(\"💸 매도 주문 시작\");\n      if (!stock || !stock.name) {\n        Alert.alert(\"오류\", \"주식 정보가 올바르지 않습니다.\");\n        return;\n      }\n      var qty = parseInt(quantity);\n      if (!qty || qty <= 0) {\n        Alert.alert(\"오류\", \"올바른 수량을 입력해주세요.\");\n        return;\n      }\n      var ownedQty = parseInt(stock.quantity) || 0;\n      if (qty > ownedQty) {\n        Alert.alert(\"매도 실패\", \"\\uBCF4\\uC720 \\uC218\\uB7C9(\" + ownedQty + \"\\uC8FC)\\uBCF4\\uB2E4 \\uB9CE\\uC774 \\uB9E4\\uB3C4\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\");\n        return;\n      }\n      if (currentPrice <= 0) {\n        Alert.alert(\"오류\", \"주식 가격 정보가 올바르지 않습니다.\");\n        return;\n      }\n      setLoading(true);\n      try {\n        var accessToken = yield getNewAccessToken(navigation);\n        if (!accessToken || !userId) {\n          Alert.alert(\"오류\", \"사용자 인증에 실패했습니다.\");\n          return;\n        }\n        var stockIdentifier = stock.symbol || stock.name;\n        var orderData = {\n          user_id: userId,\n          stock_symbol: stockIdentifier,\n          order_type: \"sell\",\n          quantity: qty,\n          price: currentPrice\n        };\n        console.log(\"📡 매도 주문 데이터:\", orderData);\n        var response = yield fetch(API_BASE_URL + \"trading/trade/\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + accessToken,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(orderData)\n        });\n        var result = yield response.json();\n        console.log(\"📬 매도 주문 응답:\", result);\n        if (response.ok && (result == null ? void 0 : result.status) === \"success\") {\n          Alert.alert(\"매도 완료\", result.message || stock.name + \" \" + qty + \"\\uC8FC \\uB9E4\\uB3C4\\uAC00 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\", [{\n            text: \"확인\",\n            onPress: function onPress() {\n              return navigation.goBack();\n            }\n          }]);\n        } else {\n          Alert.alert(\"매도 실패\", (result == null ? void 0 : result.message) || \"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4. (\" + response.status + \")\");\n        }\n      } catch (error) {\n        console.error(\"❌ 매도 주문 실패:\", error);\n        Alert.alert(\"요청 실패\", \"매도 주문 중 문제가 발생했습니다.\");\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSell() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var formatNumber = function formatNumber(number) {\n    return number.toLocaleString();\n  };\n  var getChangeColor = function getChangeColor(change) {\n    if (change > 0) return \"#F074BA\";\n    if (change < 0) return \"#00BFFF\";\n    return \"#AAAAAA\";\n  };\n  var getChangeSymbol = function getChangeSymbol(change) {\n    if (change > 0) return \"▲\";\n    if (change < 0) return \"▼\";\n    return \"\";\n  };\n  var maxSellQuantity = parseInt(stock == null ? void 0 : stock.quantity) || 0;\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    keyboardVerticalOffset: Platform.OS === \"ios\" ? 40 : 0,\n    children: _jsxs(SafeAreaView, {\n      style: styles.safeArea,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: styles.backText,\n            children: \"<\"\n          })\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"\\uB9E4\\uB3C4\"\n        })]\n      }), _jsxs(View, {\n        style: styles.stockRow,\n        children: [_jsxs(View, {\n          style: styles.stockInfo,\n          children: [_jsx(Text, {\n            style: styles.stockName,\n            children: (stock == null ? void 0 : stock.name) || \"종목명 없음\"\n          }), _jsxs(Text, {\n            style: styles.stockCode,\n            children: [\"(\", (stock == null ? void 0 : stock.symbol) || \"종목코드 없음\", \")\"]\n          })]\n        }), _jsx(View, {\n          style: styles.priceBlock,\n          children: priceLoading ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"#F074BA\"\n          }) : _jsxs(_Fragment, {\n            children: [_jsxs(Text, {\n              style: styles.priceText,\n              children: [formatNumber(currentPrice), \"\\uC6D0\"]\n            }), (stock == null ? void 0 : stock.change) !== undefined && _jsxs(Text, {\n              style: [styles.changeText, {\n                color: getChangeColor(stock.change)\n              }],\n              children: [getChangeSymbol(stock.change), Math.abs(stock.change).toFixed(2), \"%\"]\n            })]\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsxs(View, {\n        style: styles.infoSection,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"\\uD604\\uC7AC \\uBCF4\\uC720\\uB7C9\"\n        }), _jsxs(Text, {\n          style: styles.value,\n          children: [formatNumber(maxSellQuantity), \"\\uC8FC\"]\n        })]\n      }), (stock == null ? void 0 : stock.average_price) && _jsxs(View, {\n        style: styles.infoSection,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"\\uD3C9\\uADE0 \\uB2E8\\uAC00\"\n        }), _jsxs(Text, {\n          style: styles.value,\n          children: [formatNumber(stock.average_price), \"\\uC6D0\"]\n        })]\n      }), _jsxs(View, {\n        style: styles.infoSection,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"\\uB9E4\\uB3C4 \\uC218\\uB7C9\"\n        }), _jsxs(View, {\n          style: styles.inputRow,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            value: quantity,\n            onChangeText: setQuantity,\n            keyboardType: \"numeric\",\n            maxLength: 6,\n            placeholder: \"1\"\n          }), _jsx(Text, {\n            style: styles.unit,\n            children: \"\\uC8FC\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.maxButton,\n            onPress: function onPress() {\n              return setQuantity(maxSellQuantity.toString());\n            },\n            children: _jsx(Text, {\n              style: styles.maxButtonText,\n              children: \"\\uC804\\uCCB4\"\n            })\n          })]\n        }), maxSellQuantity > 0 && _jsxs(Text, {\n          style: styles.maxInfo,\n          children: [\"\\uCD5C\\uB300 \", formatNumber(maxSellQuantity), \"\\uC8FC\\uAE4C\\uC9C0 \\uB9E4\\uB3C4 \\uAC00\\uB2A5\"]\n        })]\n      }), _jsxs(View, {\n        style: styles.totalRow,\n        children: [_jsx(Text, {\n          style: styles.totalLabel,\n          children: \"\\uCD1D \\uB9E4\\uB3C4 \\uAE08\\uC561\"\n        }), _jsxs(Text, {\n          style: styles.totalAmount,\n          children: [formatNumber(calculateTotal()), \"\\uC6D0\"]\n        })]\n      }), (stock == null ? void 0 : stock.average_price) && _jsxs(View, {\n        style: styles.profitRow,\n        children: [_jsx(Text, {\n          style: styles.profitLabel,\n          children: \"\\uC608\\uC0C1 \\uC190\\uC775\"\n        }), _jsxs(Text, {\n          style: [styles.profitAmount, {\n            color: currentPrice - stock.average_price >= 0 ? \"#6EE69E\" : \"#F074BA\"\n          }],\n          children: [currentPrice - stock.average_price >= 0 ? \"+\" : \"\", formatNumber((currentPrice - stock.average_price) * (parseInt(quantity) || 0)), \"\\uC6D0\"]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: [styles.sellButton, (loading || priceLoading || maxSellQuantity === 0) && styles.disabledButton],\n        onPress: handleSell,\n        disabled: loading || priceLoading || maxSellQuantity === 0,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: \"#003340\"\n        }) : maxSellQuantity === 0 ? _jsx(Text, {\n          style: styles.sellButtonText,\n          children: \"\\uB9E4\\uB3C4\\uD560 \\uC8FC\\uC2DD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }) : _jsxs(Text, {\n          style: styles.sellButtonText,\n          children: [formatNumber(parseInt(quantity) || 0), \"\\uC8FC \\uB9E4\\uB3C4\\uD558\\uAE30\"]\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\"\n  },\n  safeArea: {\n    flex: 1,\n    paddingHorizontal: 30,\n    paddingTop: 20\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    marginTop: 40\n  },\n  backText: {\n    fontSize: 28,\n    color: \"#F074BA\",\n    marginRight: 15\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#F074BA\"\n  },\n  stockRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  stockInfo: {\n    flex: 1\n  },\n  stockName: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 4\n  },\n  stockCode: {\n    color: \"#AFA5CF\",\n    fontSize: 14\n  },\n  priceBlock: {\n    alignItems: \"flex-end\"\n  },\n  priceText: {\n    fontSize: 20,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: 4\n  },\n  changeText: {\n    fontSize: 14,\n    fontWeight: \"bold\"\n  },\n  divider: {\n    height: 1,\n    backgroundColor: \"#4A5A60\",\n    marginVertical: 20\n  },\n  infoSection: {\n    marginBottom: 25\n  },\n  label: {\n    fontSize: 16,\n    color: \"#FFD1EB\",\n    marginBottom: 8\n  },\n  value: {\n    fontSize: 18,\n    color: \"#FFFFFF\",\n    fontWeight: \"bold\"\n  },\n  inputRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  input: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 12,\n    fontSize: 18,\n    color: \"#000000\",\n    minWidth: 100,\n    textAlign: \"center\",\n    marginRight: 10\n  },\n  unit: {\n    fontSize: 18,\n    color: \"#FFFFFF\",\n    marginRight: 10\n  },\n  maxButton: {\n    backgroundColor: \"#4A5A60\",\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6\n  },\n  maxButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 14,\n    fontWeight: \"bold\"\n  },\n  maxInfo: {\n    fontSize: 12,\n    color: \"#AFA5CF\",\n    marginTop: 5\n  },\n  totalRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 20,\n    marginBottom: 15,\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    backgroundColor: \"#004455\",\n    borderRadius: 10\n  },\n  totalLabel: {\n    fontSize: 16,\n    color: \"#FFFFFF\"\n  },\n  totalAmount: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#F074BA\"\n  },\n  profitRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    backgroundColor: \"#002A35\",\n    borderRadius: 10\n  },\n  profitLabel: {\n    fontSize: 14,\n    color: \"#FFFFFF\"\n  },\n  profitAmount: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  sellButton: {\n    marginTop: \"auto\",\n    backgroundColor: \"#F074BA\",\n    borderRadius: 12,\n    paddingVertical: 16,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  disabledButton: {\n    backgroundColor: \"#A0A0A0\"\n  },\n  sellButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#003340\"\n  }\n});\nexport default TradingSellScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","TextInput","KeyboardAvoidingView","Platform","StyleSheet","Alert","ActivityIndicator","SafeAreaView","getNewAccessToken","fetchUserInfo","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TradingSellScreen","_ref","_route$params","route","navigation","stock","params","_useState","_useState2","_slicedToArray","quantity","setQuantity","_useState3","_useState4","currentPrice","setCurrentPrice","_useState5","_useState6","userId","setUserId","_useState7","_useState8","loading","setLoading","_useState9","_useState10","priceLoading","setPriceLoading","init","_ref2","_asyncToGenerator","info","id","fetchCurrentPrice","apply","arguments","_ref3","symbol","console","error","response","fetch","ok","Error","status","result","json","current_price","log","warn","price","parseInt","replace","calculateTotal","qty","handleSell","_ref4","name","alert","ownedQty","accessToken","stockIdentifier","orderData","user_id","stock_symbol","order_type","method","headers","Authorization","body","JSON","stringify","message","text","onPress","goBack","formatNumber","number","toLocaleString","getChangeColor","change","getChangeSymbol","maxSellQuantity","behavior","OS","style","styles","container","keyboardVerticalOffset","children","safeArea","header","backText","title","stockRow","stockInfo","stockName","stockCode","priceBlock","size","color","priceText","undefined","changeText","Math","abs","toFixed","divider","infoSection","label","value","average_price","inputRow","input","onChangeText","keyboardType","maxLength","placeholder","unit","maxButton","toString","maxButtonText","maxInfo","totalRow","totalLabel","totalAmount","profitRow","profitLabel","profitAmount","sellButton","disabledButton","disabled","sellButtonText","create","flex","backgroundColor","paddingHorizontal","paddingTop","flexDirection","alignItems","marginBottom","marginTop","fontSize","marginRight","fontWeight","justifyContent","height","marginVertical","borderRadius","paddingVertical","minWidth","textAlign"],"sources":["/Users/seungyeon/Doodook_Frontend/src/screens/Main/TradingSellScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n  SafeAreaView,\n} from \"react-native\";\nimport { getNewAccessToken } from \"../../utils/token\";\nimport { fetchUserInfo } from \"../../utils/user\";\nimport { API_BASE_URL } from \"../../utils/apiConfig\";\n\nconst TradingSellScreen = ({ route, navigation }) => {\n  const stock = route.params?.stock;\n  const [quantity, setQuantity] = useState(\"1\");\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [userId, setUserId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [priceLoading, setPriceLoading] = useState(true);\n\n  useEffect(() => {\n    const init = async () => {\n      // 사용자 정보 가져오기\n      await fetchUserInfo(navigation, (info) => {\n        if (info?.id) setUserId(info.id);\n      });\n\n      // 현재가 가져오기\n      await fetchCurrentPrice();\n    };\n    init();\n  }, []);\n\n  const fetchCurrentPrice = async () => {\n    if (!stock?.symbol) {\n      console.error(\"❌ 종목 코드가 없습니다.\");\n      setPriceLoading(false);\n      return;\n    }\n\n    try {\n      setPriceLoading(true);\n\n      const response = await fetch(\n        `${API_BASE_URL}trading/stock_price/?stock_code=${stock.symbol}`\n      );\n\n      if (!response.ok) {\n        throw new Error(`Price API error: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (result.status === \"success\" && result.current_price) {\n        setCurrentPrice(result.current_price);\n        console.log(\"✅ 현재가 업데이트:\", result.current_price);\n      } else {\n        console.warn(\"⚠️ 현재가 API 응답 실패:\", result);\n        // 기존 주식 가격을 사용\n        setCurrentPrice(\n          typeof stock.price === \"string\"\n            ? parseInt(stock.price.replace(/,/g, \"\"))\n            : stock.price\n        );\n      }\n    } catch (error) {\n      console.error(\"❌ 현재가 조회 실패:\", error);\n      // 기존 주식 가격을 사용\n      setCurrentPrice(\n        typeof stock.price === \"string\"\n          ? parseInt(stock.price.replace(/,/g, \"\"))\n          : stock.price\n      );\n    } finally {\n      setPriceLoading(false);\n    }\n  };\n\n  const calculateTotal = () => {\n    const qty = parseInt(quantity) || 0;\n    return currentPrice * qty;\n  };\n\n  const handleSell = async () => {\n    console.log(\"💸 매도 주문 시작\");\n\n    if (!stock || !stock.name) {\n      Alert.alert(\"오류\", \"주식 정보가 올바르지 않습니다.\");\n      return;\n    }\n\n    const qty = parseInt(quantity);\n    if (!qty || qty <= 0) {\n      Alert.alert(\"오류\", \"올바른 수량을 입력해주세요.\");\n      return;\n    }\n\n    const ownedQty = parseInt(stock.quantity) || 0;\n    if (qty > ownedQty) {\n      Alert.alert(\n        \"매도 실패\",\n        `보유 수량(${ownedQty}주)보다 많이 매도할 수 없습니다.`\n      );\n      return;\n    }\n\n    if (currentPrice <= 0) {\n      Alert.alert(\"오류\", \"주식 가격 정보가 올바르지 않습니다.\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const accessToken = await getNewAccessToken(navigation);\n      if (!accessToken || !userId) {\n        Alert.alert(\"오류\", \"사용자 인증에 실패했습니다.\");\n        return;\n      }\n\n      // 종목 식별자 결정 (종목코드 우선 사용)\n      const stockIdentifier = stock.symbol || stock.name;\n\n      const orderData = {\n        user_id: userId,\n        stock_symbol: stockIdentifier,\n        order_type: \"sell\",\n        quantity: qty,\n        price: currentPrice,\n      };\n\n      console.log(\"📡 매도 주문 데이터:\", orderData);\n\n      const response = await fetch(`${API_BASE_URL}trading/trade/`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(orderData),\n      });\n\n      const result = await response.json();\n      console.log(\"📬 매도 주문 응답:\", result);\n\n      if (response.ok && result?.status === \"success\") {\n        Alert.alert(\n          \"매도 완료\",\n          result.message || `${stock.name} ${qty}주 매도가 완료되었습니다.`,\n          [{ text: \"확인\", onPress: () => navigation.goBack() }]\n        );\n      } else {\n        Alert.alert(\n          \"매도 실패\",\n          result?.message || `오류가 발생했습니다. (${response.status})`\n        );\n      }\n    } catch (error) {\n      console.error(\"❌ 매도 주문 실패:\", error);\n      Alert.alert(\"요청 실패\", \"매도 주문 중 문제가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatNumber = (number) => {\n    return number.toLocaleString();\n  };\n\n  const getChangeColor = (change) => {\n    if (change > 0) return \"#F074BA\";\n    if (change < 0) return \"#00BFFF\";\n    return \"#AAAAAA\";\n  };\n\n  const getChangeSymbol = (change) => {\n    if (change > 0) return \"▲\";\n    if (change < 0) return \"▼\";\n    return \"\";\n  };\n\n  const maxSellQuantity = parseInt(stock?.quantity) || 0;\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n      keyboardVerticalOffset={Platform.OS === \"ios\" ? 40 : 0}\n    >\n      <SafeAreaView style={styles.safeArea}>\n        {/* 헤더 */}\n        <View style={styles.header}>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Text style={styles.backText}>{\"<\"}</Text>\n          </TouchableOpacity>\n          <Text style={styles.title}>매도</Text>\n        </View>\n\n        {/* 종목 정보 */}\n        <View style={styles.stockRow}>\n          <View style={styles.stockInfo}>\n            <Text style={styles.stockName}>{stock?.name || \"종목명 없음\"}</Text>\n            <Text style={styles.stockCode}>\n              ({stock?.symbol || \"종목코드 없음\"})\n            </Text>\n          </View>\n\n          <View style={styles.priceBlock}>\n            {priceLoading ? (\n              <ActivityIndicator size=\"small\" color=\"#F074BA\" />\n            ) : (\n              <>\n                <Text style={styles.priceText}>\n                  {formatNumber(currentPrice)}원\n                </Text>\n                {stock?.change !== undefined && (\n                  <Text\n                    style={[\n                      styles.changeText,\n                      { color: getChangeColor(stock.change) },\n                    ]}\n                  >\n                    {getChangeSymbol(stock.change)}\n                    {Math.abs(stock.change).toFixed(2)}%\n                  </Text>\n                )}\n              </>\n            )}\n          </View>\n        </View>\n\n        <View style={styles.divider} />\n\n        {/* 현재 보유량 */}\n        <View style={styles.infoSection}>\n          <Text style={styles.label}>현재 보유량</Text>\n          <Text style={styles.value}>{formatNumber(maxSellQuantity)}주</Text>\n        </View>\n\n        {/* 평균 단가 정보 */}\n        {stock?.average_price && (\n          <View style={styles.infoSection}>\n            <Text style={styles.label}>평균 단가</Text>\n            <Text style={styles.value}>\n              {formatNumber(stock.average_price)}원\n            </Text>\n          </View>\n        )}\n\n        {/* 수량 입력 */}\n        <View style={styles.infoSection}>\n          <Text style={styles.label}>매도 수량</Text>\n          <View style={styles.inputRow}>\n            <TextInput\n              style={styles.input}\n              value={quantity}\n              onChangeText={setQuantity}\n              keyboardType=\"numeric\"\n              maxLength={6}\n              placeholder=\"1\"\n            />\n            <Text style={styles.unit}>주</Text>\n            <TouchableOpacity\n              style={styles.maxButton}\n              onPress={() => setQuantity(maxSellQuantity.toString())}\n            >\n              <Text style={styles.maxButtonText}>전체</Text>\n            </TouchableOpacity>\n          </View>\n          {maxSellQuantity > 0 && (\n            <Text style={styles.maxInfo}>\n              최대 {formatNumber(maxSellQuantity)}주까지 매도 가능\n            </Text>\n          )}\n        </View>\n\n        {/* 총 금액 */}\n        <View style={styles.totalRow}>\n          <Text style={styles.totalLabel}>총 매도 금액</Text>\n          <Text style={styles.totalAmount}>\n            {formatNumber(calculateTotal())}원\n          </Text>\n        </View>\n\n        {/* 예상 손익 */}\n        {stock?.average_price && (\n          <View style={styles.profitRow}>\n            <Text style={styles.profitLabel}>예상 손익</Text>\n            <Text\n              style={[\n                styles.profitAmount,\n                {\n                  color:\n                    currentPrice - stock.average_price >= 0\n                      ? \"#6EE69E\"\n                      : \"#F074BA\",\n                },\n              ]}\n            >\n              {currentPrice - stock.average_price >= 0 ? \"+\" : \"\"}\n              {formatNumber(\n                (currentPrice - stock.average_price) * (parseInt(quantity) || 0)\n              )}\n              원\n            </Text>\n          </View>\n        )}\n\n        {/* 매도 버튼 */}\n        <TouchableOpacity\n          style={[\n            styles.sellButton,\n            (loading || priceLoading || maxSellQuantity === 0) &&\n              styles.disabledButton,\n          ]}\n          onPress={handleSell}\n          disabled={loading || priceLoading || maxSellQuantity === 0}\n        >\n          {loading ? (\n            <ActivityIndicator color=\"#003340\" />\n          ) : maxSellQuantity === 0 ? (\n            <Text style={styles.sellButtonText}>매도할 주식이 없습니다</Text>\n          ) : (\n            <Text style={styles.sellButtonText}>\n              {formatNumber(parseInt(quantity) || 0)}주 매도하기\n            </Text>\n          )}\n        </TouchableOpacity>\n      </SafeAreaView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003340\",\n  },\n  safeArea: {\n    flex: 1,\n    paddingHorizontal: 30,\n    paddingTop: 20,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    marginTop: 40,\n  },\n  backText: {\n    fontSize: 28,\n    color: \"#F074BA\",\n    marginRight: 15,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#F074BA\",\n  },\n  stockRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  stockInfo: {\n    flex: 1,\n  },\n  stockName: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 4,\n  },\n  stockCode: {\n    color: \"#AFA5CF\",\n    fontSize: 14,\n  },\n  priceBlock: {\n    alignItems: \"flex-end\",\n  },\n  priceText: {\n    fontSize: 20,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: 4,\n  },\n  changeText: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n  divider: {\n    height: 1,\n    backgroundColor: \"#4A5A60\",\n    marginVertical: 20,\n  },\n  infoSection: {\n    marginBottom: 25,\n  },\n  label: {\n    fontSize: 16,\n    color: \"#FFD1EB\",\n    marginBottom: 8,\n  },\n  value: {\n    fontSize: 18,\n    color: \"#FFFFFF\",\n    fontWeight: \"bold\",\n  },\n  inputRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  input: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    paddingVertical: 12,\n    fontSize: 18,\n    color: \"#000000\",\n    minWidth: 100,\n    textAlign: \"center\",\n    marginRight: 10,\n  },\n  unit: {\n    fontSize: 18,\n    color: \"#FFFFFF\",\n    marginRight: 10,\n  },\n  maxButton: {\n    backgroundColor: \"#4A5A60\",\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n  },\n  maxButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n  maxInfo: {\n    fontSize: 12,\n    color: \"#AFA5CF\",\n    marginTop: 5,\n  },\n  totalRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 20,\n    marginBottom: 15,\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    backgroundColor: \"#004455\",\n    borderRadius: 10,\n  },\n  totalLabel: {\n    fontSize: 16,\n    color: \"#FFFFFF\",\n  },\n  totalAmount: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#F074BA\",\n  },\n  profitRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    backgroundColor: \"#002A35\",\n    borderRadius: 10,\n  },\n  profitLabel: {\n    fontSize: 14,\n    color: \"#FFFFFF\",\n  },\n  profitAmount: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n  sellButton: {\n    marginTop: \"auto\",\n    backgroundColor: \"#F074BA\",\n    borderRadius: 12,\n    paddingVertical: 16,\n    alignItems: \"center\",\n    marginBottom: 30,\n  },\n  disabledButton: {\n    backgroundColor: \"#A0A0A0\",\n  },\n  sellButtonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#003340\",\n  },\n});\n\nexport default TradingSellScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}