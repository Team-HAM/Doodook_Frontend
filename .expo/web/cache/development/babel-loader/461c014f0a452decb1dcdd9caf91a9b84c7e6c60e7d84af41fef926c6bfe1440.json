{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar dummyNotices = [{\n  id: 1,\n  title: '앱 업데이트 안내',\n  content: '1.1.0 버전이 출시되었습니다. 새로운 기능과 안정성 개선이 포함되어 있습니다.'\n}, {\n  id: 2,\n  title: '점검 안내',\n  content: '4월 10일 오전 2시부터 3시까지 시스템 점검이 있을 예정입니다.'\n}];\nvar NoticeScreen = function NoticeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notices = _useState4[0],\n    setNotices = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    expandedId = _useState6[0],\n    setExpandedId = _useState6[1];\n  useEffect(function () {\n    var loadNotices = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        setLoading(true);\n        try {\n          setNotices(dummyNotices);\n        } catch (e) {\n          console.error('공지사항 로딩 실패:', e);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function loadNotices() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadNotices();\n  }, []);\n  var toggleExpand = function toggleExpand(id) {\n    setExpandedId(expandedId === id ? null : id);\n  };\n  if (loading) {\n    return _jsx(View, {\n      style: [styles.container, {\n        justifyContent: 'center'\n      }],\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#F074BA\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: styles.backButton,\n      children: _jsx(Text, {\n        style: styles.backText,\n        children: '<'\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.scroll,\n      children: notices.map(function (notice) {\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return toggleExpand(notice.id);\n          },\n          style: styles.noticeBox,\n          children: [_jsx(Text, {\n            style: styles.noticeTitle,\n            children: notice.title\n          }), expandedId === notice.id && _jsx(Text, {\n            style: styles.noticeContent,\n            children: notice.content\n          })]\n        }, notice.id);\n      })\n    })]\n  });\n};\nexport default NoticeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003340',\n    paddingHorizontal: 30,\n    paddingTop: 60\n  },\n  backButton: {\n    position: 'absolute',\n    top: 50,\n    left: 20,\n    zIndex: 10\n  },\n  backText: {\n    fontSize: 36,\n    color: '#F074BA'\n  },\n  title: {\n    fontSize: 20,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  scroll: {\n    paddingBottom: 30\n  },\n  noticeBox: {\n    backgroundColor: '#D4DDEF30',\n    padding: 16,\n    borderRadius: 10,\n    marginBottom: 12\n  },\n  noticeTitle: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    fontWeight: 'bold'\n  },\n  noticeContent: {\n    marginTop: 10,\n    color: '#EEEEEE',\n    fontSize: 15,\n    lineHeight: 22\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","ActivityIndicator","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","dummyNotices","id","title","content","NoticeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","notices","setNotices","_useState5","_useState6","expandedId","setExpandedId","loadNotices","_ref2","_asyncToGenerator","e","console","error","apply","arguments","toggleExpand","style","styles","container","justifyContent","children","size","color","onPress","goBack","backButton","backText","contentContainerStyle","scroll","map","notice","noticeBox","noticeTitle","noticeContent","create","flex","backgroundColor","paddingHorizontal","paddingTop","position","top","left","zIndex","fontSize","fontWeight","marginBottom","textAlign","paddingBottom","padding","borderRadius","marginTop","lineHeight"],"sources":["/Users/seungyeon/Doodook_Frontend/src/screens/MyPage/NoticeScreen.js"],"sourcesContent":["// NoticeScreen.js\nimport React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  ActivityIndicator,\n  TouchableOpacity,\n} from 'react-native';\n\nconst dummyNotices = [\n  {\n    id: 1,\n    title: '앱 업데이트 안내',\n    content: '1.1.0 버전이 출시되었습니다. 새로운 기능과 안정성 개선이 포함되어 있습니다.',\n  },\n  {\n    id: 2,\n    title: '점검 안내',\n    content: '4월 10일 오전 2시부터 3시까지 시스템 점검이 있을 예정입니다.',\n  },\n];\n\nconst NoticeScreen = ({navigation}) => {\n  const [loading, setLoading] = useState(true);\n  const [notices, setNotices] = useState([]);\n  const [expandedId, setExpandedId] = useState(null);\n\n  useEffect(() => {\n    // 추후 서버 연동 시 여기에 fetch 로직 추가\n    const loadNotices = async () => {\n      setLoading(true);\n      try {\n        // const res = await fetch('https://your-api/notice');\n        // const data = await res.json();\n        setNotices(dummyNotices);\n      } catch (e) {\n        console.error('공지사항 로딩 실패:', e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadNotices();\n  }, []);\n\n  const toggleExpand = (id) => {\n    setExpandedId(expandedId === id ? null : id);\n  };\n\n  if (loading) {\n    return (\n      <View style={[styles.container, { justifyContent: 'center' }]}>\n        <ActivityIndicator size=\"large\" color=\"#F074BA\" />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n              <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\n                <Text style={styles.backText}>{'<'}</Text>\n              </TouchableOpacity>\n      <Text style={styles.title}>공지사항</Text>\n      <ScrollView contentContainerStyle={styles.scroll}>\n        {notices.map((notice) => (\n          <TouchableOpacity\n            key={notice.id}\n            onPress={() => toggleExpand(notice.id)}\n            style={styles.noticeBox}\n          >\n            <Text style={styles.noticeTitle}>{notice.title}</Text>\n            {expandedId === notice.id && (\n              <Text style={styles.noticeContent}>{notice.content}</Text>\n            )}\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default NoticeScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#003340',\n        paddingHorizontal: 30,\n        paddingTop: 60,\n      },\n      backButton: {\n        position: 'absolute',\n        top: 50,\n        left: 20,\n        zIndex: 10,\n      },\n      backText: {\n        fontSize: 36,\n        color: '#F074BA',\n      },\n//   title: {\n//     fontSize: 20,\n//     color: '#F8C7CC',\n//     fontWeight: 'bold',\n//     marginBottom: 20,\n//     textAlign: 'center',\n//   },\ntitle: {\n    fontSize: 20,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  scroll: {\n    paddingBottom: 30,\n  },\n  noticeBox: {\n    backgroundColor: '#D4DDEF30',\n    padding: 16,\n    borderRadius: 10,\n    marginBottom: 12,\n  },\n  noticeTitle: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n  },\n  noticeContent: {\n    marginTop: 10,\n    color: '#EEEEEE',\n    fontSize: 15,\n    lineHeight: 22,\n  },\n});\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAUnD,IAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACX,CAAC,CACF;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/B,IAAAC,SAAA,GAA8BlB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAoC3B,QAAQ,CAAC,IAAI,CAAC;IAAA4B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC7B,SAAS,CAAC,YAAM;IAEd,IAAMgC,WAAW;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC9BX,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UAGFI,UAAU,CAACf,YAAY,CAAC;QAC1B,CAAC,CAAC,OAAOuB,CAAC,EAAE;UACVC,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEF,CAAC,CAAC;QACjC,CAAC,SAAS;UACRZ,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAAA,gBAXKS,WAAWA,CAAA;QAAA,OAAAC,KAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAWhB;IACDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMQ,YAAY,GAAG,SAAfA,YAAYA,CAAI3B,EAAE,EAAK;IAC3BkB,aAAa,CAACD,UAAU,KAAKjB,EAAE,GAAG,IAAI,GAAGA,EAAE,CAAC;EAC9C,CAAC;EAED,IAAIS,OAAO,EAAE;IACX,OACEb,IAAA,CAACP,IAAI;MAACuC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;QAAEC,cAAc,EAAE;MAAS,CAAC,CAAE;MAAAC,QAAA,EAC5DpC,IAAA,CAACH,iBAAiB;QAACwC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAE;IAAC,CAC9C,CAAC;EAEX;EAEA,OACEpC,KAAA,CAACT,IAAI;IAACuC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAE,QAAA,GACpBpC,IAAA,CAACF,gBAAgB;MAACyC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ9B,UAAU,CAAC+B,MAAM,CAAC,CAAC;MAAA,CAAC;MAACR,KAAK,EAAEC,MAAM,CAACQ,UAAW;MAAAL,QAAA,EAC7EpC,IAAA,CAACN,IAAI;QAACsC,KAAK,EAAEC,MAAM,CAACS,QAAS;QAAAN,QAAA,EAAE;MAAG,CAAO;IAAC,CAC1B,CAAC,EAC3BpC,IAAA,CAACN,IAAI;MAACsC,KAAK,EAAEC,MAAM,CAAC5B,KAAM;MAAA+B,QAAA,EAAC;IAAI,CAAM,CAAC,EACtCpC,IAAA,CAACJ,UAAU;MAAC+C,qBAAqB,EAAEV,MAAM,CAACW,MAAO;MAAAR,QAAA,EAC9CnB,OAAO,CAAC4B,GAAG,CAAC,UAACC,MAAM;QAAA,OAClB5C,KAAA,CAACJ,gBAAgB;UAEfyC,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQR,YAAY,CAACe,MAAM,CAAC1C,EAAE,CAAC;UAAA,CAAC;UACvC4B,KAAK,EAAEC,MAAM,CAACc,SAAU;UAAAX,QAAA,GAExBpC,IAAA,CAACN,IAAI;YAACsC,KAAK,EAAEC,MAAM,CAACe,WAAY;YAAAZ,QAAA,EAAEU,MAAM,CAACzC;UAAK,CAAO,CAAC,EACrDgB,UAAU,KAAKyB,MAAM,CAAC1C,EAAE,IACvBJ,IAAA,CAACN,IAAI;YAACsC,KAAK,EAAEC,MAAM,CAACgB,aAAc;YAAAb,QAAA,EAAEU,MAAM,CAACxC;UAAO,CAAO,CAC1D;QAAA,GAPIwC,MAAM,CAAC1C,EAQI,CAAC;MAAA,CACpB;IAAC,CACQ,CAAC;EAAA,CACT,CAAC;AAEX,CAAC;AAED,eAAeG,YAAY;AAE3B,IAAM0B,MAAM,GAAGtC,UAAU,CAACuD,MAAM,CAAC;EAC7BhB,SAAS,EAAE;IACPiB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE;EACd,CAAC;EACDb,UAAU,EAAE;IACVc,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC;EACDhB,QAAQ,EAAE;IACRiB,QAAQ,EAAE,EAAE;IACZrB,KAAK,EAAE;EACT,CAAC;EAQPjC,KAAK,EAAE;IACHsD,QAAQ,EAAE,EAAE;IACZrB,KAAK,EAAE,SAAS;IAChBsB,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDlB,MAAM,EAAE;IACNmB,aAAa,EAAE;EACjB,CAAC;EACDhB,SAAS,EAAE;IACTK,eAAe,EAAE,WAAW;IAC5BY,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBJ,YAAY,EAAE;EAChB,CAAC;EACDb,WAAW,EAAE;IACXW,QAAQ,EAAE,EAAE;IACZrB,KAAK,EAAE,SAAS;IAChBsB,UAAU,EAAE;EACd,CAAC;EACDX,aAAa,EAAE;IACbiB,SAAS,EAAE,EAAE;IACb5B,KAAK,EAAE,SAAS;IAChBqB,QAAQ,EAAE,EAAE;IACZQ,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}