{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getNewAccessToken } from \"./token\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API_BASE_URL } from \"./apiConfig\";\nexport var fetchUserMbtiType = function () {\n  var _ref = _asyncToGenerator(function* (navigation, setMbtiType) {\n    try {\n      var accessToken = yield getNewAccessToken(navigation);\n      if (!accessToken) {\n        console.error(\"액세스 토큰이 없습니다.\");\n        return;\n      }\n      var response = yield fetch(API_BASE_URL + \"mbti/result/detail/\", {\n        headers: {\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var text = yield response.text();\n      console.log(\"MBTI 응답 본문:\", text);\n      try {\n        var data = JSON.parse(text);\n        var mbti = \"\";\n        if (data.result && typeof data.result === \"string\") {\n          mbti = data.result;\n        } else if (data.type) {\n          mbti = data.type;\n        } else {\n          console.warn(\"예상치 못한 MBTI 응답 형식:\", data);\n          setMbtiType(null);\n          return;\n        }\n        console.log(\"사용자의 MBTI 유형:\", mbti);\n        setMbtiType(mbti);\n      } catch (parseError) {\n        console.error(\"MBTI JSON 파싱 실패:\", parseError);\n        setMbtiType(null);\n      }\n    } catch (err) {\n      console.error(\"MBTI 결과 요청 실패:\", err);\n      setMbtiType(null);\n    }\n  });\n  return function fetchUserMbtiType(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getMbtiImage = function getMbtiImage(mbtiType) {\n  if (!mbtiType) return null;\n  switch (mbtiType) {\n    case \"SDGH\":\n      return require(\"../assets/mbti/SDGH.png\");\n    case \"SDGQ\":\n      return require(\"../assets/mbti/SDGQ.png\");\n    case \"SDVH\":\n      return require(\"../assets/mbti/SDVH.png\");\n    case \"SDVQ\":\n      return require(\"../assets/mbti/SDVQ.png\");\n    case \"SFGH\":\n      return require(\"../assets/mbti/SFGH.png\");\n    case \"SFGQ\":\n      return require(\"../assets/mbti/SFGQ.png\");\n    case \"SFVH\":\n      return require(\"../assets/mbti/SFVH.png\");\n    case \"SFVQ\":\n      return require(\"../assets/mbti/SFVQ.png\");\n    case \"RDGH\":\n      return require(\"../assets/mbti/RDGH.png\");\n    case \"RDGQ\":\n      return require(\"../assets/mbti/RDGQ.png\");\n    case \"RDVH\":\n      return require(\"../assets/mbti/RDVH.png\");\n    case \"RDVQ\":\n      return require(\"../assets/mbti/RDVQ.png\");\n    case \"RFGH\":\n      return require(\"../assets/mbti/RFGH.png\");\n    case \"RFGQ\":\n      return require(\"../assets/mbti/RFGQ.png\");\n    case \"RFVH\":\n      return require(\"../assets/mbti/RFVH.png\");\n    case \"RFVQ\":\n      return require(\"../assets/mbti/RFVQ.png\");\n    default:\n      console.warn(\"\\uC774\\uBBF8\\uC9C0\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4: \" + mbtiType);\n      return null;\n  }\n};","map":{"version":3,"names":["getNewAccessToken","AsyncStorage","API_BASE_URL","fetchUserMbtiType","_ref","_asyncToGenerator","navigation","setMbtiType","accessToken","console","error","response","fetch","headers","Authorization","text","log","data","JSON","parse","mbti","result","type","warn","parseError","err","_x","_x2","apply","arguments","getMbtiImage","mbtiType","require"],"sources":["/Users/seungyeon/Doodook_Frontend/src/utils/mbtiType.js"],"sourcesContent":["import { getNewAccessToken } from \"./token\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API_BASE_URL } from \"./apiConfig\";\n\n// ✅ 사용자의 MBTI 유형을 가져오는 함수\nexport const fetchUserMbtiType = async (navigation, setMbtiType) => {\n  try {\n    const accessToken = await getNewAccessToken(navigation);\n    if (!accessToken) {\n      console.error(\"액세스 토큰이 없습니다.\");\n      return;\n    }\n\n    const response = await fetch(`${API_BASE_URL}mbti/result/detail/`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const text = await response.text();\n    console.log(\"MBTI 응답 본문:\", text);\n\n    try {\n      const data = JSON.parse(text);\n      let mbti = \"\";\n\n      if (data.result && typeof data.result === \"string\") {\n        mbti = data.result;\n      } else if (data.type) {\n        mbti = data.type;\n      } else {\n        console.warn(\"예상치 못한 MBTI 응답 형식:\", data);\n        setMbtiType(null);\n        return;\n      }\n\n      console.log(\"사용자의 MBTI 유형:\", mbti);\n      setMbtiType(mbti);\n    } catch (parseError) {\n      console.error(\"MBTI JSON 파싱 실패:\", parseError);\n      setMbtiType(null);\n    }\n  } catch (err) {\n    console.error(\"MBTI 결과 요청 실패:\", err);\n    setMbtiType(null);\n  }\n};\n\n// ✅ MBTI 이미지 불러오기 함수\nexport const getMbtiImage = (mbtiType) => {\n  if (!mbtiType) return null;\n\n  switch (mbtiType) {\n    // 안정형(S)\n    case \"SDGH\": return require(\"../assets/mbti/SDGH.png\");\n    case \"SDGQ\": return require(\"../assets/mbti/SDGQ.png\");\n    case \"SDVH\": return require(\"../assets/mbti/SDVH.png\");\n    case \"SDVQ\": return require(\"../assets/mbti/SDVQ.png\");\n    case \"SFGH\": return require(\"../assets/mbti/SFGH.png\");\n    case \"SFGQ\": return require(\"../assets/mbti/SFGQ.png\");\n    case \"SFVH\": return require(\"../assets/mbti/SFVH.png\");\n    case \"SFVQ\": return require(\"../assets/mbti/SFVQ.png\");\n\n    // 모험형(R)\n    case \"RDGH\": return require(\"../assets/mbti/RDGH.png\");\n    case \"RDGQ\": return require(\"../assets/mbti/RDGQ.png\");\n    case \"RDVH\": return require(\"../assets/mbti/RDVH.png\");\n    case \"RDVQ\": return require(\"../assets/mbti/RDVQ.png\");\n    case \"RFGH\": return require(\"../assets/mbti/RFGH.png\");\n    case \"RFGQ\": return require(\"../assets/mbti/RFGQ.png\");\n    case \"RFVH\": return require(\"../assets/mbti/RFVH.png\");\n    case \"RFVQ\": return require(\"../assets/mbti/RFVQ.png\");\n\n    default:\n      console.warn(`이미지를 찾을 수 없습니다: ${mbtiType}`);\n      return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}